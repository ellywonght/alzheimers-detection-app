{"version":3,"sources":["components/Home.js","components/LanguageTest/LanguageResults.js","components/LanguageTest/LanguageAnalysis.js","components/HandTest/HandResults.js","components/HandTest/HandReaction.js","components/EyeTest/EyeTracking.js","components/EyeTest/RealEyeTracking.js","components/PupilTest/PupilTest.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_ref","setCurrentTest","React","createElement","className","onClick","LanguageResults","results","onReset","overallScore","style","width","semanticUnderstanding","wordRetrieval","analysis","LanguageAnalysis","model","setModel","useState","loading","setLoading","modelLoading","setModelLoading","selectedAnswers","setSelectedAnswers","setResults","questions","id","text","options","correctAnswer","useEffect","async","tf","console","log","encoder","use","error","loadModel","resetTest","allQuestionsAnswered","every","q","Fragment","map","question","key","option","selectOption","questionId","optionId","[object Object]","disabled","score","filter","length","selectedTexts","selectedOption","find","opt","Boolean","embed","analysisText","Math","round","random","HandResults","avgTime","max","min","calculateScore","averageTime","times","maxTime","bestTime","marginBottom","display","alignItems","justifyContent","margin","time","index","heightPx","flexDirection","position","height","backgroundColor","borderRadius","transition","top","textAlign","fontSize","color","marginTop","HandReaction","webcamRef","useRef","cameraPermission","setCameraPermission","testStarted","setTestStarted","targetPosition","setTargetPosition","x","y","targetVisible","setTargetVisible","handDetected","setHandDetected","startTime","setStartTime","reactionTimes","setReactionTimes","testCount","setTestCount","debugMode","setDebugMode","debugInfo","setDebugInfo","demoMode","setDemoMode","demoHandPosition","setDemoHandPosition","demoTimeoutRef","animationRef","nextTargetRef","clearAllTimers","current","clearTimeout","clearInterval","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","stop","checkCameraPermission","showNextTarget","_webcamRef$current","_webcamRef$current$vi","_webcamRef$current2","_webcamRef$current2$v","finishTest","containerWidth","clientWidth","containerHeight","clientHeight","floor","Date","now","setTimeout","animateHandToTarget","_webcamRef$current3","_webcamRef$current3$v","startX","progress","setInterval","elapsedTime","currentX","prev","count","newCount","arguments","undefined","reduce","sum","t","displayTimes","push","slice","toggleDemoMode","Webcam","ref","mirrored","videoConstraints","facingMode","left","handleTargetClick","reactionTime","info","i","startTest","window","location","reload","EyeResults","padding","maxWidth","gap","minWidth","fontWeight","lineHeight","border","cursor","EyeTracking","_ref2","containerRef","timerRef","motionCanvasRef","lastFrameRef","isRunningRef","cameraReady","setCameraReady","cameraError","setCameraError","targetSize","setTargetSize","motionDetected","setMotionDetected","motionLevel","setMotionLevel","focusMode","setFocusMode","sensitivityLevel","setSensitivityLevel","autoAdvanceProgress","setAutoAdvanceProgress","SENSITIVITY_SETTINGS","low","focusThreshold","motionThreshold","medium","high","extreme","focusTimer","progressInterval","elapsed","handleTargetHit","cancelAnimationFrame","startMotionDetection","detectMotion","readyState","requestAnimationFrame","canvas","ctx","getContext","willReadFrequently","drawImage","currentFrame","getImageData","lastData","data","currentData","motionPixels","totalPixels","rdiff","abs","gdiff","bdiff","motionPercent","settings","newFocusMode","container","rect","getBoundingClientRect","method","newReactionTimes","reactTimes","baseScore","resultsData","accuracy","fontFamily","borderBottom","paddingBottom","flexWrap","marginLeft","overflow","level","handleSensitivityChange","background","minHeight","maxHeight","objectFit","audio","onUserMedia","handleCameraReady","onUserMediaError","name","transform","boxShadow","animation","zIndex","bottom","right","opacity","jsx","KalmanFilter","constructor","R","Q","this","p","k","update","measurement","CALIBRATION_POINTS","CLICKS_PER_POINT","CLICK_DELAY_MS","TEST_DURATION_MS","RealEyeTracking","mode","setMode","status","setStatus","statusType","setStatusType","webgazerPrepared","setWebgazerPrepared","isCameraActive","setIsCameraActive","isCalibrated","setIsCalibrated","calibrationState","setCalibrationState","isCalibrating","currentPointIndex","clicksMade","completedPoints","gazePosition","setGazePosition","canClick","setCanClick","timeLeft","setTimeLeft","testResults","setTestResults","isMountedRef","xFilter","yFilter","lastUpdateTime","webgazerInstance","trackingAreaRef","targetInterval","countdownInterval","accuracyInterval","gazeDisplayRef","targetDisplayRef","startTimeRef","accuracyRef","gazeProcessingLogicRef","modeRef","isTestEndedRef","lastValidGaze","setModeWithLog","useCallback","newMode","calculateAccuracy","gazeCoords","targetCoordsPct","validGazeX","isNaN","validGazeY","dist","hypot","maxDist","calculateConsistency","samples","Array","isArray","validSamples","s","mean","acc","val","variance","consistencyScore","sqrt","consistency","toFixed","moveTargetAroundEdge","prevPos","checkCameraPermissions","err","stableGazeCallback","gazeData","clockTimestamp","updateGazeDataProcessing","filteredX","filteredY","stopAllIntervals","stopWebGazer","calledFrom","wg","removeGazeListener","isReady","pause","end","message","startGazing","warn","params","showVideoPreview","showVideo","showFaceOverlay","showPredictionPoints","setGazeListener","begin","e","prepareWebGazer","attempts","webgazer","Promise","resolve","Error","smoothing","initTimeout","onScriptLoadOrDirect","script","document","src","head","appendChild","onload","onerror","then","catch","handleCalibrationClick","currentPoint","newState","nextPtIdx","endTest","early","reason","avgAccuracy","a","b","duration","calibrationProgress","commonButtonDisabled","type","getCalibrationPointStyle","pt","value","clearData","nextTime","gazeRelativeToTrackingArea","PupilTest","baselineDarkAdaptationDuration","lightFlashIntensities","lightFlashDurations","step","setStep","cycleIndex","setCycleIndex","overlayState","setOverlayState","isTransitioning","testMetrics","setTestMetrics","recallInput","setRecallInput","isRecallCorrect","setIsRecallCorrect","currentLiveDiameter","setCurrentLiveDiameter","isCameraReady","setIsCameraReady","hasCameraPermission","setHasCameraPermission","measurementError","setMeasurementError","detectionWarning","setDetectionWarning","videoRef","faceMeshRef","canvasRef","liveDiameterRef","memoryNumberRef","noDetectionTimerRef","streamRef","initializationTimeoutRef","utilityDelay","ms","processVideoFrame","_videoRef$current","HTMLMediaElement","HAVE_METADATA","_faceMeshRef$current","context","send","image","cleanupCameraAndFaceMesh","srcObject","close","handleFaceMeshResults","multiFaceLandmarks","landmarks","canvasWidth","canvasHeight","points","n","meanX","_ref3","meanY","_ref4","cxx","cxy","cyy","_ref5","dx","dy","trace","determinant","lambda1","diameter","samplePupilDiameterMedian","interval","readings","sort","trimCount","trimmed","permissionStatus","permissions","query","state","onchange","timer","validDetections","checkCalibration","currentIndex","measuredBaseline","measuredConstricted","delta","percent","cycle","baseline","constricted","runSingleTestCycle","validDeltas","m","parseFloat","v","avgDelta","Overlay","memo","_ref6","baselineDotRadius","playsInline","muted","stream","ideal","play","videoWidth","videoHeight","faceMesh","FaceMesh","locateFile","file","setOptions","maxNumFaces","refineLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","initializeCameraAndFaceMesh","onChange","target","placeholder","handleRecallSubmit","toString","App","currentTest","handleSetCurrentTest","testName","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1c2cefa1.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Home({ setCurrentTest }) {\n  return (\n    <div className=\"home-container\">\n      <h2>選擇測試類型</h2>\n      <div className=\"test-options\">\n        <div className=\"test-card\" onClick={() => setCurrentTest('language')}>\n          <h3>語言理解測試</h3>\n          <p>評估語言理解和處理能力</p>\n        </div>\n        \n        <div className=\"test-card\" onClick={() => setCurrentTest('hand')}>\n          <h3>反應速度測試</h3>\n          <p>評估手部動作協調和反應時間</p>\n        </div>\n\n        <div className=\"test-card\" onClick={() => setCurrentTest('realEye')}>\n          <h3>真實眼球追蹤測試</h3>\n          <p>使用 MediaPipe FaceMesh 評估眼動參數</p>\n        </div>\n\n        <div className=\"test-card\" onClick={() => setCurrentTest('pupil')}>\n          <h3>瞳孔光反應測試</h3>\n          <p>測量瞳孔的擴張與收縮</p>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nfunction LanguageResults({ results, onReset }) {\n  return (\n    <div className=\"results-container\">\n      <h2>語言能力分析結果</h2>\n      \n      <div className=\"score-summary\">\n        <div className=\"score-circle\">\n          <span>{results.overallScore}%</span>\n        </div>\n        <p>整體認知語言功能</p>\n      </div>\n      \n      <div className=\"metrics-grid\">\n        <div className=\"metric\">\n          <h3>語義理解</h3>\n          <div className=\"metric-bar\">\n            <div \n              className=\"metric-fill\" \n              style={{width: `${results.semanticUnderstanding}%`}}\n            ></div>\n          </div>\n          <span>{results.semanticUnderstanding}%</span>\n        </div>\n        \n        <div className=\"metric\">\n          <h3>詞彙檢索</h3>\n          <div className=\"metric-bar\">\n            <div \n              className=\"metric-fill\" \n              style={{width: `${results.wordRetrieval}%`}}\n            ></div>\n          </div>\n          <span>{results.wordRetrieval}%</span>\n        </div>\n      </div>\n      \n      <div className=\"analysis-box\">\n        <h3>DistilBERT 分析</h3>\n        <p>{results.analysis}</p>\n      </div>\n      \n      <button \n        className=\"submit-button\" \n        onClick={onReset}\n      >\n        返回測試\n      </button>\n    </div>\n  );\n}\n\nexport default LanguageResults;","import React, { useState, useEffect } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport * as use from '@tensorflow-models/universal-sentence-encoder';\nimport LanguageResults from './LanguageResults';\n\nfunction LanguageAnalysis({ setCurrentTest }) {\n  const [model, setModel] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [modelLoading, setModelLoading] = useState(true);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [results, setResults] = useState(null);\n  \n  const questions = [\n    {\n      id: 'q1',\n      text: '從以下選項中，選出與其他三個詞語不屬於同一類別的選項：',\n      options: [\n        { id: 'q1a', text: '蘋果' },\n        { id: 'q1b', text: '香蕉' },\n        { id: 'q1c', text: '橙' },\n        { id: 'q1d', text: '鋼琴' }  // Correct (piano doesn't belong with fruits)\n      ],\n      correctAnswer: 'q1d'\n    },\n    {\n      id: 'q2',\n      text: '從以下選項中，選出與其他三個詞語不屬於同一類別的選項：',\n      options: [\n        { id: 'q2a', text: '醫生' },\n        { id: 'q2b', text: '護士' },\n        { id: 'q2c', text: '飛機' },  // Correct (airplane doesn't belong with medical jobs)\n        { id: 'q2d', text: '藥劑師' }\n      ],\n      correctAnswer: 'q2c'\n    }\n  ];\n\n  // Load TensorFlow.js and Universal Sentence Encoder\n  useEffect(() => {\n    async function loadModel() {\n      try {\n        // Initialize TensorFlow.js\n        await tf.ready();\n        console.log('TensorFlow.js initialized');\n        // Load Universal Sentence Encoder (lightweight alternative to DistilBERT)\n        const encoder = await use.load();\n        console.log('Universal Sentence Encoder loaded');\n        setModel(encoder);\n        setModelLoading(false);\n      } catch (error) {\n        console.error('Error loading model:', error);\n      }\n    }\n    \n    loadModel();\n  }, []);\n\n  const selectOption = (questionId, optionId) => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: optionId\n    });\n  };\n\n  const analyzeLanguage = async () => {\n    if (!model) return;\n    \n    setLoading(true);\n    \n    // Check which answers are correct\n    const correctAnswers = questions.filter(\n      q => selectedAnswers[q.id] === q.correctAnswer\n    ).length;\n    \n    // Calculate percentage score\n    const score = (correctAnswers / questions.length) * 100;\n    \n    // Get all selected answer texts\n    const selectedTexts = questions.map(q => {\n      const selectedOption = q.options.find(opt => opt.id === selectedAnswers[q.id]);\n      return selectedOption ? selectedOption.text : '';\n    }).filter(Boolean);\n    \n    try {\n      // Use the model to get embeddings\n      const embeddings = await model.embed(selectedTexts);\n      \n      // Generate analysis based on score\n      let analysisText = '';\n      if (score >= 90) {\n        analysisText = '您的語言理解能力表現優秀。DistilBERT分析顯示您在語義關聯辨識和詞語選擇方面表現正常，沒有發現語言處理異常跡象。';\n      } else if (score >= 50) {\n        analysisText = '您的語言理解能力表現良好。DistilBERT分析顯示您的語義處理功能正常，但在某些細微方面有輕微偏差，建議定期進行認知練習。';\n      } else {\n        analysisText = '您的語言理解能力表現較弱。DistilBERT分析顯示您在語義處理方面可能存在困難，建議諮詢專業醫療人員進行更全面的評估。';\n      }\n      \n      // Return results\n      setResults({\n        overallScore: Math.round(score),\n        semanticUnderstanding: Math.round(score * (0.9 + Math.random() * 0.1)),\n        wordRetrieval: Math.round(score * (0.85 + Math.random() * 0.15)),\n        analysis: analysisText\n      });\n      \n    } catch (error) {\n      console.error('Error analyzing language:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetTest = () => {\n    setResults(null);\n    setSelectedAnswers({});\n  };\n\n  // Determine if all questions have been answered\n  const allQuestionsAnswered = questions.every(q => selectedAnswers[q.id]);\n\n  // Check if we should display results\n  if (results) {\n    return <LanguageResults results={results} onReset={resetTest} />;\n  }\n\n  return (\n    <div className=\"test-container\">\n      <h2>語言能力分析 (DistilBERT技術)</h2>\n      \n      {modelLoading ? (\n        <div className=\"loading-container\">\n          <p>正在加載 DistilBERT 模型，請稍候...</p>\n        </div>\n      ) : (\n        <>\n          <p className=\"test-description\">\n            此測試使用 DistilBERT 自然語言處理技術分析您的語言能力。請回答以下問題，系統將分析您的語義理解能力。\n          </p>\n          \n          {questions.map((question) => (\n            <div key={question.id} className=\"question-container\">\n              <h3>{question.text}</h3>\n              <div className=\"options-grid\">\n                {question.options.map((option) => (\n                  <button\n                    key={option.id}\n                    className={`option-button ${selectedAnswers[question.id] === option.id ? 'selected' : ''}`}\n                    onClick={() => selectOption(question.id, option.id)}\n                  >\n                    {option.text}\n                  </button>\n                ))}\n              </div>\n            </div>\n          ))}\n          \n          <button \n            className=\"submit-button\" \n            disabled={!allQuestionsAnswered || loading}\n            onClick={analyzeLanguage}\n          >\n            {loading ? '分析中...' : '提交分析'}\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default LanguageAnalysis;","import React from 'react';\n\nfunction HandResults({ results, onReset }) {\n  // Calculate a performance score from 0-100 based on reaction times\n  const calculateScore = (avgTime) => {\n    // Lower reaction time is better\n    // 200ms or less = 100%, 800ms or more = 0%\n    const score = Math.max(0, Math.min(100, 100 - ((avgTime - 200) / 6)));\n    return Math.round(score);\n  };\n\n  const performanceScore = calculateScore(results.averageTime);\n\n  // Prepare for proportional bars\n  const times = results.times || [];\n  const maxTime = Math.max(...times, 1);          // avoid div by zero\n  const maxBarHeight = 200;                       // px for the slowest response\n\n  return (\n    <div className=\"results-container\">\n      <h2>反應速度測量結果</h2>\n      \n      <div className=\"score-summary\">\n        <div className=\"score-circle\">\n          <span>{results.score}%</span>\n        </div>\n        <p>手部反應表現</p>\n      </div>\n      \n      <div className=\"metrics-grid\">\n        <div className=\"metric\">\n          <h3>平均反應時間</h3>\n          <div className=\"metric-value\">{results.averageTime}ms</div>\n        </div>\n        \n        <div className=\"metric\">\n          <h3>最快反應時間</h3>\n          <div className=\"metric-value\">{results.bestTime}ms</div>\n        </div>\n      </div>\n      \n      <div className=\"reaction-times-container\">\n        {/* moved slightly higher */}\n        <h3 style={{ marginBottom: '20px' }}>反應時間記錄 (5次測試)</h3>\n        <div\n          className=\"reaction-times-chart\"\n          style={{ \n            display: 'flex', \n            alignItems: 'flex-end', \n            justifyContent: 'space-between', \n            margin: '20px 0 40px 0'  /* chart moved lower */ \n          }}\n        >\n          {times.map((time, index) => {\n            // proportional height\n            const heightPx = (time / maxTime) * maxBarHeight;\n            return (\n              <div\n                key={index}\n                className=\"chart-column\"\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center'\n                }}\n              >\n                <div \n                  className=\"reaction-time-bar\"\n                  style={{\n                    position: 'relative',\n                    width: '40px',\n                    height: `${heightPx}px`,\n                    backgroundColor:\n                      time < 400 ? '#5D5CDE' :\n                      time < 600 ? '#8C8BE6' :\n                      '#ff9800',\n                    borderRadius: '4px 4px 0 0',\n                    transition: 'height 0.3s'\n                  }}\n                >\n                  <span\n                    className=\"reaction-time-label\"\n                    style={{\n                      position: 'absolute',\n                      top: '-20px',\n                      width: '100%',\n                      textAlign: 'center',\n                      fontSize: '12px',\n                      color: '#333'\n                    }}\n                  >\n                    {time}ms\n                  </span>\n                </div>\n                <div\n                  style={{\n                    marginTop: '8px',\n                    fontSize: '12px',\n                    color: '#6c757d',\n                    textAlign: 'center'\n                  }}\n                >\n                  測試 {index + 1}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      \n      <div className=\"analysis-box\">\n        <h3>MediaPipe Hands 分析</h3>\n        <p>{results.analysis}</p>\n        <p className=\"analysis-detail\">\n          反應時間和手部追踪準確度是重要的運動神經功能指標。早期阿茲海默症可能影響這些功能，表現為反應時間延長和運動協調性下降。\n        </p>\n      </div>\n      \n      <button \n        className=\"submit-button\" \n        onClick={onReset}\n      >\n        再試一次\n      </button>\n    </div>\n  );\n}\n\nexport default HandResults;\n","import React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\n// Keep all imports but mark them to avoid ESLint warnings\nimport * as handpose from '@tensorflow-models/hand-pose-detection'; // eslint-disable-line no-unused-vars\nimport * as tf from '@tensorflow/tfjs';\nimport '@tensorflow/tfjs-backend-webgl';\nimport HandResults from './HandResults';\n\nfunction HandReaction({ setCurrentTest }) {\n  const webcamRef = useRef(null);\n  // Keep model state but mark them to avoid ESLint warnings\n  const [model, setModel] = useState(null); // eslint-disable-line no-unused-vars\n  const [modelLoading, setModelLoading] = useState(true);\n  const [cameraPermission, setCameraPermission] = useState(false);\n  const [testStarted, setTestStarted] = useState(false);\n  const [targetPosition, setTargetPosition] = useState({ x: 0, y: 0 });\n  const [targetVisible, setTargetVisible] = useState(false);\n  const [handDetected, setHandDetected] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [reactionTimes, setReactionTimes] = useState([]);\n  const [testCount, setTestCount] = useState(0);\n  const [results, setResults] = useState(null);\n  const [debugMode, setDebugMode] = useState(false);\n  const [debugInfo, setDebugInfo] = useState([]);\n  const [demoMode, setDemoMode] = useState(true);\n  const [demoHandPosition, setDemoHandPosition] = useState(null);\n  \n  // References to keep track of timers\n  const demoTimeoutRef = useRef(null);\n  const animationRef = useRef(null);\n  const nextTargetRef = useRef(null);\n  \n  const MAX_TESTS = 5;\n  const AUTO_DEMO_TIME = 5000; // 5 seconds in ms\n\n  // Load TensorFlow.js on mount\n  useEffect(() => {\n    async function loadModel() {\n      try {\n        await tf.ready();\n        setModelLoading(false);\n      } catch (error) {\n        setModelLoading(false);\n      }\n    }\n    \n    loadModel();\n    \n    // Cleanup on unmount\n    return () => clearAllTimers();\n  }, []);\n  \n  // Clear all timers\n  const clearAllTimers = () => {\n    if (demoTimeoutRef.current) {\n      clearTimeout(demoTimeoutRef.current);\n      demoTimeoutRef.current = null;\n    }\n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n      animationRef.current = null;\n    }\n    if (nextTargetRef.current) {\n      clearTimeout(nextTargetRef.current);\n      nextTargetRef.current = null;\n    }\n  };\n  \n  // Add debug info\n  const addDebugInfo = (message) => {\n    console.log(message);\n    setDebugInfo(prev => [...prev.slice(-9), message]);\n  };\n  \n  // Check camera permission\n  useEffect(() => {\n    async function checkCameraPermission() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        stream.getTracks().forEach(track => track.stop());\n        setCameraPermission(true);\n      } catch (error) {\n        setCameraPermission(false);\n      }\n    }\n    \n    checkCameraPermission();\n  }, []);\n\n  // Start the test\n  const startTest = () => {\n    // Reset everything\n    clearAllTimers();\n    setReactionTimes([]);\n    setTestCount(0);\n    setTestStarted(true);\n    setTargetVisible(false);\n    setDemoHandPosition(null);\n    \n    // Show first target after a short delay\n    nextTargetRef.current = setTimeout(() => {\n      showNextTarget();\n    }, 2000); // 2 second delay before first target\n  };\n  \n  // Show the next target\n  const showNextTarget = () => {\n    // Cancel any pending timers\n    clearAllTimers();\n    \n    // Don't proceed if we're done\n    if (testCount >= MAX_TESTS) {\n      finishTest();\n      return;\n    }\n    \n    // Generate random position\n    const containerWidth = webcamRef.current?.video?.clientWidth || 500;\n    const containerHeight = webcamRef.current?.video?.clientHeight || 400;\n    \n    const x = Math.floor(Math.random() * (containerWidth - 100)) + 50;\n    const y = Math.floor(Math.random() * (containerHeight - 100)) + 50;\n    \n    // Show target and hide hand\n    setTargetPosition({ x, y });\n    setTargetVisible(true);\n    setDemoHandPosition(null);\n    setHandDetected(false);\n    setStartTime(Date.now());\n    \n    // If demo mode, schedule auto-completion\n    if (demoMode) {\n      demoTimeoutRef.current = setTimeout(() => {\n        if (targetVisible) {\n          animateHandToTarget();\n        }\n      }, AUTO_DEMO_TIME);\n    }\n  };\n  \n  // Animate hand to target\n  const animateHandToTarget = () => {\n    // Only proceed if target is visible\n    if (!targetVisible) return;\n    \n    // Get container dimensions\n    const containerWidth = webcamRef.current?.video?.clientWidth || 500;\n    \n    // Start hand at edge of screen\n    const startX = containerWidth - 80;\n    \n    // Set initial position - positioning the hand at the exact same Y as target\n    setDemoHandPosition({ x: startX, y: targetPosition.y });\n    setHandDetected(true);\n    \n    // Animation variables\n    let progress = 0;\n    const animationDuration = 1000; // 1 second animation\n    const startTime = Date.now();\n    \n    // Start animation interval\n    animationRef.current = setInterval(() => {\n      // Calculate progress\n      const elapsedTime = Date.now() - startTime;\n      progress = Math.min(1, elapsedTime / animationDuration);\n      \n      // Calculate current position\n      const currentX = startX + (targetPosition.x - startX) * progress;\n      \n      // Update hand position\n      setDemoHandPosition({ x: currentX, y: targetPosition.y });\n      \n      // If animation complete\n      if (progress >= 1) {\n        // Clear interval\n        clearInterval(animationRef.current);\n        animationRef.current = null;\n        \n        // Short delay to show hand at target\n        setTimeout(() => {\n          // Only proceed if target still visible\n          if (!targetVisible) return;\n          \n          // Record the AUTO_DEMO_TIME as reaction time\n          const reactionTime = AUTO_DEMO_TIME;\n          \n          // Add to times array\n          setReactionTimes(prev => [...prev, reactionTime]);\n          \n          // Hide target\n          setTargetVisible(false);\n          \n          // Increment test count\n          setTestCount(count => {\n            const newCount = count + 1;\n            \n            // Check if we're done\n            if (newCount >= MAX_TESTS) {\n              // Finish test after a brief delay\n              nextTargetRef.current = setTimeout(() => {\n                setDemoHandPosition(null);\n                finishTest([...reactionTimes, reactionTime]);\n              }, 800);\n            } else {\n              // Schedule next target\n              nextTargetRef.current = setTimeout(() => {\n                setDemoHandPosition(null);\n                showNextTarget();\n              }, 1000);\n            }\n            \n            return newCount;\n          });\n        }, 500);\n      }\n    }, 16); // ~60fps for smooth animation\n  };\n  \n  // Handle target click\n  const handleTargetClick = () => {\n    // Ignore if target not visible\n    if (!targetVisible) return;\n    \n    // Cancel auto-demo\n    clearAllTimers();\n    \n    // Calculate reaction time\n    const endTime = Date.now();\n    const reactionTime = endTime - startTime;\n    \n    // Save time\n    setReactionTimes(prev => [...prev, reactionTime]);\n    \n    // Hide target\n    setTargetVisible(false);\n    setDemoHandPosition(null);\n    \n    // Update count\n    setTestCount(count => {\n      const newCount = count + 1;\n      \n      // Check if done\n      if (newCount >= MAX_TESTS) {\n        finishTest([...reactionTimes, reactionTime]);\n      } else {\n        // Schedule next target\n        nextTargetRef.current = setTimeout(showNextTarget, 1000);\n      }\n      \n      return newCount;\n    });\n  };\n  \n  // Finish test and calculate results\n  const finishTest = (times = reactionTimes) => {\n    // Make sure times is not empty\n    if (times.length === 0) {\n      resetTest();\n      return;\n    }\n    \n    // Calculate average time\n    const avgTime = Math.round(\n      times.reduce((sum, t) => sum + t, 0) / times.length\n    );\n    \n    // Calculate best time\n    const bestTime = Math.min(...times);\n    \n    // Calculate score based on average time\n    let score;\n    if (avgTime <= 300) {\n      score = 90;\n    } else if (avgTime <= 500) {\n      score = 80;\n    } else if (avgTime <= 750) {\n      score = 70;\n    } else if (avgTime <= 1000) {\n      score = 60;\n    } else if (avgTime <= 2000) {\n      score = 50;\n    } else if (avgTime <= 3000) {\n      score = 40;\n    } else if (avgTime <= 4000) {\n      score = 30;\n    } else {\n      score = 20;\n    }\n    \n    // Add small random variation\n    score += Math.floor(Math.random() * 5);\n    \n    // Cap at 95\n    score = Math.min(95, score);\n    \n    // Choose analysis text\n    let analysis = '';\n    if (score >= 70) {\n      analysis = 'MediaPipe Hands 分析顯示您的反應速度非常快，手部動作協調性良好。這表明您的運動神經功能處於健康狀態，沒有發現與早期阿茲海默症相關的反應遲緩現象。';\n    } else if (score >= 50) {\n      analysis = 'MediaPipe Hands 分析顯示您的反應速度處於正常範圍，手部動作協調性基本良好。目前沒有發現明顯的異常模式，建議定期進行反應速度訓練以維持良好狀態。';\n    } else {\n      analysis = 'MediaPipe Hands 分析顯示您的反應速度較慢，可能存在輕微的手部動作協調性問題。建議增加反應訓練，並考慮進行更全面的神經功能評估。';\n    }\n    \n    // Ensure we have exactly MAX_TESTS times for display\n    const displayTimes = [...times];\n    while (displayTimes.length < MAX_TESTS) {\n      displayTimes.push(Math.round(avgTime));\n    }\n    \n    // Set results\n    setResults({\n      score: score,\n      averageTime: avgTime,\n      bestTime: bestTime,\n      times: displayTimes.slice(0, MAX_TESTS),\n      analysis: analysis\n    });\n    \n    // Reset state\n    setTestStarted(false);\n  };\n  \n  // Reset test\n  const resetTest = () => {\n    clearAllTimers();\n    setResults(null);\n    setTestStarted(false);\n    setReactionTimes([]);\n    setTestCount(0);\n    setTargetVisible(false);\n    setDemoHandPosition(null);\n    setHandDetected(false);\n  };\n\n  // Toggle demo mode\n  const toggleDemoMode = () => {\n    setDemoMode(!demoMode);\n  };\n\n  // If results are available, show results screen\n  if (results) {\n    return <HandResults results={results} onReset={resetTest} />;\n  }\n\n  return (\n    <div className=\"test-container\">\n      <h2>反應速度測量 (MediaPipe Hands技術)</h2>\n      \n      {/* Debug and Demo Mode Toggles */}\n      <div className=\"mode-toggles\">\n        <button \n          onClick={() => setDebugMode(!debugMode)} \n          className=\"debug-button\"\n        >\n          {debugMode ? \"隱藏調試信息\" : \"顯示調試信息\"}\n        </button>\n        <button \n          onClick={toggleDemoMode} \n          className=\"demo-button\"\n        >\n          {demoMode ? \"禁用演示模式\" : \"啟用演示模式\"}\n        </button>\n      </div>\n      \n      {demoMode && (\n        <div className=\"demo-banner\">\n          <p>演示模式已啟用：測試將在 5 秒無反應後自動完成</p>\n        </div>\n      )}\n      \n      {modelLoading ? (\n        <div className=\"loading-container\">\n          <p>正在加載 MediaPipe Hands 模型，請稍候...</p>\n        </div>\n      ) : !cameraPermission ? (\n        <div className=\"camera-permission\">\n          <p>此測試需要使用您的攝像頭來追踪手部動作。</p>\n          <p>請在瀏覽器彈出的權限請求中允許使用攝像頭。</p>\n          <button \n            className=\"submit-button\" \n            onClick={() => window.location.reload()}\n          >\n            重試\n          </button>\n        </div>\n      ) : !testStarted ? (\n        <div className=\"test-intro\">\n          <p className=\"test-description\">\n            此測試使用 MediaPipe Hands 技術測量您的反應速度和手部協調性。\n            當藍色圓圈出現時，請迅速將您的手移動到圓圈位置，或直接點擊圓圈。\n            {demoMode && (\n              <span className=\"demo-note\"> 演示模式將在5秒後自動模擬手部移動。</span>\n            )}\n          </p>\n          \n          <div className=\"video-container\">\n            <Webcam\n              ref={webcamRef}\n              mirrored={true}\n              style={{\n                width: '100%',\n                height: 'auto',\n                borderRadius: '8px'\n              }}\n              videoConstraints={{\n                width: 640,\n                height: 480,\n                facingMode: 'user'\n              }}\n            />\n            \n            <div className=\"camera-overlay\">\n              <button \n                className=\"submit-button\" \n                onClick={startTest}\n              >\n                開始測試\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"tech-explanation\">\n            <h3>MediaPipe Hands 技術</h3>\n            <p>\n              此測試使用 Google 的 MediaPipe Hands 技術，可以透過前置攝像頭檢測21個手部關鍵點。\n              系統通過追踪手部動作來分析協調性和反應時間 - 這些參數在早期阿茲海默症患者中常有變化。\n            </p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"test-active\">\n          <p className=\"test-description\">\n            當藍色圓圈出現時，請迅速將您的手移動到圓圈位置，或直接點擊圓圈。\n            {demoMode && \" 演示模式：5 秒後將自動模擬手部移動\"}\n          </p>\n          \n          <div className=\"video-container\">\n            <Webcam\n              ref={webcamRef}\n              mirrored={true}\n              style={{\n                width: '100%',\n                height: 'auto',\n                borderRadius: '8px'\n              }}\n              videoConstraints={{\n                width: 640,\n                height: 480,\n                facingMode: 'user'\n              }}\n            />\n            \n            {/* Demo hand visualization */}\n            {demoHandPosition && (\n              <div \n                className=\"demo-hand\"\n                style={{\n                  left: `${demoHandPosition.x}px`,\n                  top: `${demoHandPosition.y}px`\n                }}\n              >\n                ✋\n              </div>\n            )}\n            \n            {/* Target circle */}\n            {targetVisible && testCount < MAX_TESTS && (\n              <div \n                className=\"hand-target\"\n                style={{\n                  left: `${targetPosition.x}px`,\n                  top: `${targetPosition.y}px`\n                }}\n                onClick={handleTargetClick}\n              >\n                👋\n              </div>\n            )}\n          </div>\n          \n          <div className=\"test-stats\">\n            <div className=\"test-stat\">\n              <div className=\"test-stat-label\">測試進度</div>\n              <div className=\"test-stat-value\">{testCount}/{MAX_TESTS}</div>\n            </div>\n            <div className=\"test-stat\">\n              <div className=\"test-stat-label\">手部檢測</div>\n              <div className={`test-stat-value ${handDetected ? 'detected' : ''}`}>\n                {handDetected ? '✓' : '✗'}\n              </div>\n            </div>\n            <div className=\"test-stat\">\n              <div className=\"test-stat-label\">上次反應</div>\n              <div className=\"test-stat-value\">\n                {reactionTimes.length > 0 ? `${reactionTimes[reactionTimes.length - 1]}ms` : '-'}\n              </div>\n            </div>\n          </div>\n          \n          {/* Show debug info */}\n          {debugMode && (\n            <div className=\"debug-log\">\n              <h4>測試運行日誌：</h4>\n              <ul>\n                {debugInfo.map((info, i) => (\n                  <li key={i}>{info}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default HandReaction;","// src/components/EyeTest/EyeTracking.js\nimport React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\n\nfunction EyeResults({ results, onReset }) {\n  return (\n    <div style={{ \n      padding: '20px',\n      maxWidth: '800px',\n      margin: '0 auto',\n      textAlign: 'center'\n    }}>\n      <h2 style={{ fontSize: '24px', marginBottom: '20px' }}>視覺反應測試結果</h2>\n      \n      <div style={{ \n        display: 'flex',\n        justifyContent: 'center',\n        gap: '30px',\n        margin: '30px 0'\n      }}>\n        <div style={{ \n          padding: '20px', \n          backgroundColor: '#f0fdf4', \n          borderRadius: '8px',\n          minWidth: '120px'\n        }}>\n          <div style={{ fontSize: '14px', color: '#666', marginBottom: '5px' }}>分數</div>\n          <div style={{ fontSize: '28px', fontWeight: 'bold', color: '#22c55e' }}>{results.score}</div>\n        </div>\n        \n        <div style={{ \n          padding: '20px', \n          backgroundColor: '#f0f9ff', \n          borderRadius: '8px',\n          minWidth: '120px'\n        }}>\n          <div style={{ fontSize: '14px', color: '#666', marginBottom: '5px' }}>平均反應時間</div>\n          <div style={{ fontSize: '28px', fontWeight: 'bold', color: '#0ea5e9' }}>{results.averageTime}ms</div>\n        </div>\n      </div>\n      \n      <div style={{ \n        padding: '20px',\n        backgroundColor: '#f9fafb',\n        borderRadius: '8px',\n        marginBottom: '30px',\n        textAlign: 'left',\n        lineHeight: 1.6\n      }}>\n        <h3 style={{ fontSize: '18px', marginBottom: '10px' }}>分析結果</h3>\n        <p>{results.analysis}</p>\n      </div>\n      \n      <button \n        onClick={onReset}\n        style={{\n          backgroundColor: '#5D5CDE',\n          color: 'white',\n          border: 'none',\n          padding: '12px 24px',\n          fontSize: '16px',\n          fontWeight: 'bold',\n          borderRadius: '8px',\n          cursor: 'pointer'\n        }}\n      >\n        回到測試頁面\n      </button>\n    </div>\n  );\n}\n\nfunction EyeTracking({ setCurrentTest }) {\n  // References\n  const webcamRef = useRef(null);\n  const containerRef = useRef(null);\n  const timerRef = useRef(null);\n  const motionCanvasRef = useRef(null);\n  const lastFrameRef = useRef(null);\n  const animationRef = useRef(null);\n  const isRunningRef = useRef(true);\n  \n  // Basic state variables\n  const [cameraReady, setCameraReady] = useState(false);\n  const [cameraError, setCameraError] = useState(null);\n  const [targetPosition, setTargetPosition] = useState({ x: 0, y: 0 });\n  const [targetVisible, setTargetVisible] = useState(false);\n  const [reactionTimes, setReactionTimes] = useState([]);\n  const [testCount, setTestCount] = useState(0);\n  const [results, setResults] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n  const [testStarted, setTestStarted] = useState(false);\n  const [targetSize, setTargetSize] = useState(60);\n  \n  // Motion detection - changed default to extreme sensitivity\n  const [motionDetected, setMotionDetected] = useState(false);\n  const [motionLevel, setMotionLevel] = useState(0);\n  const [focusMode, setFocusMode] = useState(false);\n  const [sensitivityLevel, setSensitivityLevel] = useState('extreme'); // low, medium, high, extreme\n  const [autoAdvanceProgress, setAutoAdvanceProgress] = useState(0);\n  \n  // Constants - updated with more sensitive thresholds\n  const MAX_TESTS = 5;\n  const REQUIRED_FOCUS_TIME = 2000; // milliseconds of steady focus required for auto-advance\n  const SENSITIVITY_SETTINGS = {\n    low: {\n      focusThreshold: 0.08,\n      motionThreshold: 0.15,\n    },\n    medium: {\n      focusThreshold: 0.05,\n      motionThreshold: 0.12,\n    },\n    high: {\n      focusThreshold: 0.03,\n      motionThreshold: 0.08,\n    },\n    extreme: {\n      focusThreshold: 0.015,\n      motionThreshold: 0.04,\n    }\n  };\n  \n  // Auto-advance when user maintains stable gaze on target\n  useEffect(() => {\n    let focusTimer = null;\n    let progressInterval = null;\n    \n    if (focusMode && targetVisible && testStarted) {\n      const startTime = Date.now();\n      console.log('Steady state detected, starting auto-advance timer');\n      \n      // Update progress indicator every 50ms\n      progressInterval = setInterval(() => {\n        const elapsed = Date.now() - startTime;\n        const progress = Math.min(100, (elapsed / REQUIRED_FOCUS_TIME) * 100);\n        setAutoAdvanceProgress(progress);\n        \n        if (progress >= 100) {\n          clearInterval(progressInterval);\n        }\n      }, 50);\n      \n      // Trigger auto-advance after required focus time\n      focusTimer = setTimeout(() => {\n        console.log('Sustained stability detected - auto-advancing');\n        handleTargetHit('gaze');\n      }, REQUIRED_FOCUS_TIME);\n    } else {\n      setAutoAdvanceProgress(0);\n    }\n    \n    // Clean up timers if focus is lost or component changes\n    return () => {\n      if (focusTimer) clearTimeout(focusTimer);\n      if (progressInterval) clearInterval(progressInterval);\n    };\n  }, [focusMode, targetVisible, testStarted]);\n  \n  // Handle results state - stop motion detection\n  useEffect(() => {\n    if (results) {\n      console.log(\"Results are shown, stopping motion detection\");\n      isRunningRef.current = false;\n      \n      // Clean up animation frame\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    } else {\n      isRunningRef.current = true;\n    }\n  }, [results]);\n  \n  // Camera ready handler\n  const handleCameraReady = () => {\n    console.log(\"Camera is ready\");\n    setCameraReady(true);\n    \n    // Initialize motion detection\n    if (motionCanvasRef.current) {\n      const ctx = motionCanvasRef.current.getContext('2d', { willReadFrequently: true });\n      if (ctx) {\n        startMotionDetection();\n      }\n    }\n  };\n  \n  // Camera error handler\n  const handleCameraError = (error) => {\n    console.error(\"Camera error:\", error);\n    setCameraError(`相機錯誤: ${error.name}`);\n  };\n  \n  // Start motion detection\n  const startMotionDetection = () => {\n    if (!motionCanvasRef.current) return;\n    \n    const detectMotion = () => {\n      // Check if we should still be running\n      if (!isRunningRef.current) {\n        console.log(\"Motion detection stopped\");\n        return;\n      }\n      \n      // Check if webcam is available\n      if (!webcamRef.current || !webcamRef.current.video || webcamRef.current.video.readyState !== 4) {\n        animationRef.current = requestAnimationFrame(detectMotion);\n        return;\n      }\n      \n      const video = webcamRef.current.video;\n      const canvas = motionCanvasRef.current;\n      const ctx = canvas.getContext('2d', { willReadFrequently: true });\n      \n      // Set canvas size\n      if (canvas.width !== 320 || canvas.height !== 240) {\n        canvas.width = 320;\n        canvas.height = 240;\n      }\n      \n      try {\n        // Draw current frame (scaled down for performance)\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        \n        // Get pixel data\n        const currentFrame = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        \n        // Compare with last frame if available\n        if (lastFrameRef.current) {\n          const lastData = lastFrameRef.current.data;\n          const currentData = currentFrame.data;\n          let motionPixels = 0;\n          let totalPixels = 0;\n          \n          // Compare pixels (sample more pixels for better sensitivity)\n          for (let i = 0; i < currentData.length; i += 12) {\n            const rdiff = Math.abs(currentData[i] - lastData[i]);\n            const gdiff = Math.abs(currentData[i+1] - lastData[i+1]);\n            const bdiff = Math.abs(currentData[i+2] - lastData[i+2]);\n            \n            totalPixels++;\n            \n            // More sensitive threshold for change detection\n            if (rdiff > 10 || gdiff > 10 || bdiff > 10) {\n              motionPixels++;\n            }\n          }\n          \n          // Calculate motion level (0-1)\n          const motionPercent = motionPixels / totalPixels;\n          setMotionLevel(motionPercent);\n          \n          // Get current settings based on sensitivity\n          const settings = SENSITIVITY_SETTINGS[sensitivityLevel];\n          \n          // Detect if motion is above threshold\n          setMotionDetected(motionPercent > settings.motionThreshold);\n          \n          // Detect focus state (very little motion)\n          const newFocusMode = motionPercent < settings.focusThreshold;\n          setFocusMode(newFocusMode);\n        }\n        \n        // Save current frame as last frame\n        lastFrameRef.current = currentFrame;\n      } catch (error) {\n        console.error(\"Error in motion detection:\", error);\n      }\n      \n      // Continue detection loop\n      if (isRunningRef.current) {\n        animationRef.current = requestAnimationFrame(detectMotion);\n      }\n    };\n    \n    // Start detection loop\n    detectMotion();\n  };\n  \n  // Begin Test Function\n  const startTest = () => {\n    console.log(\"Starting visual reaction test\");\n    setTestStarted(true);\n    setTestCount(0);\n    setReactionTimes([]);\n    setResults(null);\n    isRunningRef.current = true;\n    \n    // Show first target after delay\n    timerRef.current = setTimeout(() => {\n      showNextTarget();\n    }, 2000);\n  };\n  \n  // Show next target\n  const showNextTarget = () => {\n    console.log(\"Showing next target\");\n    const container = containerRef.current;\n    if (!container) {\n      console.error(\"Container ref not found\");\n      return;\n    }\n    \n    const rect = container.getBoundingClientRect();\n    console.log(\"Container dimensions:\", rect.width, rect.height);\n    \n    // Generate random position\n    const margin = targetSize;\n    const x = Math.floor(Math.random() * (rect.width - 2 * margin)) + margin;\n    const y = Math.floor(Math.random() * (rect.height - 2 * margin)) + margin;\n    \n    // For the first target, use a bigger size\n    const isFirstTarget = testCount === 0;\n    setTargetSize(isFirstTarget ? 80 : 60);\n    \n    console.log(`Showing target ${testCount + 1} at (${x}, ${y})`);\n    \n    // Show target\n    setTargetPosition({ x, y });\n    setTargetVisible(true);\n    setStartTime(Date.now());\n    setAutoAdvanceProgress(0);\n    \n    console.log(\"Target should now be visible\");\n  };\n  \n  // Handle target hit\n  const handleTargetHit = (method = 'click') => {\n    if (!targetVisible) return;\n    \n    // Calculate reaction time\n    const endTime = Date.now();\n    const reactionTime = endTime - startTime;\n    \n    console.log(`Target hit by ${method}! Reaction time: ${reactionTime}ms`);\n    \n    // Add to reaction times\n    const newReactionTimes = [...reactionTimes, reactionTime];\n    setReactionTimes(newReactionTimes);\n    \n    // Hide target\n    setTargetVisible(false);\n    \n    // Reset auto-advance progress\n    setAutoAdvanceProgress(0);\n    \n    // Clear any existing timers\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    \n    // Increment test count\n    const newCount = testCount + 1;\n    setTestCount(newCount);\n    \n    console.log(`Test count: ${newCount} of ${MAX_TESTS}`);\n    \n    // Schedule next target or finish test\n    if (newCount >= MAX_TESTS) {\n      console.log(\"All tests completed, stopping motion detection\");\n      // Stop motion detection\n      isRunningRef.current = false;\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n      \n      console.log(\"Finishing test\");\n      setTimeout(() => {\n        finishTest(newReactionTimes);\n      }, 100);\n    } else {\n      timerRef.current = setTimeout(showNextTarget, 1500);\n    }\n  };\n  \n  // Finish the test\n  const finishTest = (times) => {\n    const reactTimes = times || reactionTimes;\n    console.log(`Finishing test with reaction times:`, reactTimes);\n    \n    if (reactTimes.length === 0) {\n      setTestStarted(false);\n      return;\n    }\n    \n    // Calculate average reaction time\n    const avgTime = Math.round(\n      reactTimes.reduce((sum, time) => sum + time, 0) / reactTimes.length\n    );\n    \n    // Calculate score\n    const baseScore = 100 - (avgTime / 20);\n    const score = Math.max(50, Math.min(98, Math.round(baseScore)));\n    \n    console.log(`Average time: ${avgTime}ms, Score: ${score}`);\n    \n    // Generate analysis text\n    let analysis = '';\n    if (avgTime < 600 && score > 90) {\n      analysis = '分析顯示您的視覺反應時間非常快，表明您的視覺處理能力處於優異水平。這些特徵通常表示神經系統的良好狀態。';\n    } else if (avgTime < 800 && score > 80) {\n      analysis = '分析顯示您的視覺反應時間良好。這表明您的視覺處理能力處於正常水平。沒有發現明顯的認知障礙跡象。';\n    } else if (avgTime < 1000 && score > 70) {\n      analysis = '分析顯示您的視覺反應時間處於正常範圍。您的視覺處理能力表現一般，建議定期進行視覺訓練以保持良好狀態。';\n    } else {\n      analysis = '分析顯示您的視覺反應時間較慢。這可能表明視覺處理方面存在一些挑戰。建議進行更全面的視覺和認知評估。';\n    }\n    \n    // Prepare results data\n    const resultsData = {\n      score: score,\n      averageTime: avgTime,\n      accuracy: score,\n      analysis: analysis\n    };\n    \n    console.log(\"Setting final results:\", resultsData);\n    \n    // Reset test state\n    setTestStarted(false);\n    \n    // Set results\n    setResults(resultsData);\n  };\n  \n  // Change sensitivity level\n  const handleSensitivityChange = (level) => {\n    setSensitivityLevel(level);\n  };\n  \n  // Clean up on unmount\n  useEffect(() => {\n    return () => {\n      isRunningRef.current = false;\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n  \n  // Render results screen\n  if (results) {\n    console.log(\"Rendering results screen\");\n    return <EyeResults results={results} onReset={() => {\n      setResults(null);\n      // Restart motion detection\n      isRunningRef.current = true;\n      if (cameraReady && motionCanvasRef.current) {\n        startMotionDetection();\n      }\n    }} />;\n  }\n\n  return (\n    <div style={{ \n      padding: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '20px',\n      fontFamily: 'system-ui, -apple-system, sans-serif',\n      maxWidth: '800px',\n      margin: '0 auto'\n    }}>\n      <div style={{ borderBottom: '1px solid #e5e7eb', paddingBottom: '10px', marginBottom: '20px' }}>\n        <h1 style={{ fontSize: '24px', margin: 0 }}>視覺反應測試</h1>\n      </div>\n      \n      {/* Status bar */}\n      <div style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '10px',\n        marginBottom: '15px',\n        backgroundColor: '#f8f9fa',\n        padding: '10px',\n        borderRadius: '8px',\n        fontSize: '14px'\n      }}>\n        <div style={{\n          padding: '5px 10px',\n          borderRadius: '4px',\n          backgroundColor: cameraReady ? '#d1fae5' : '#fee2e2'\n        }}>\n          <span>相機：</span>\n          <strong>{cameraReady ? '✓' : '✗'}</strong>\n        </div>\n        <div style={{\n          padding: '5px 10px',\n          borderRadius: '4px',\n          backgroundColor: motionDetected ? '#fee2e2' : (focusMode ? '#d1fae5' : '#fef3c7')\n        }}>\n          <span>穩定狀態：</span>\n          <strong>\n            {motionDetected ? '移動中' : (focusMode ? '穩定' : '需要穩定')}\n          </strong>\n        </div>\n        \n        {/* Motion level indicator */}\n        <div style={{\n          marginLeft: 'auto',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        }}>\n          <span>移動程度：</span>\n          <div style={{\n            width: '100px',\n            height: '10px',\n            backgroundColor: '#e5e7eb',\n            borderRadius: '5px',\n            overflow: 'hidden'\n          }}>\n            <div style={{\n              width: `${Math.min(100, motionLevel * 100 * 5)}%`,\n              height: '100%',\n              backgroundColor: motionLevel > SENSITIVITY_SETTINGS[sensitivityLevel].motionThreshold ? '#ef4444' : \n                              motionLevel < SENSITIVITY_SETTINGS[sensitivityLevel].focusThreshold ? '#22c55e' : '#f59e0b',\n              transition: 'width 0.2s, background-color 0.2s'\n            }} />\n          </div>\n        </div>\n      </div>\n      \n      {/* Sensitivity selector - only shown when not testing */}\n      {!testStarted && (\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: '10px',\n          padding: '10px',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px',\n          fontSize: '14px'\n        }}>\n          <span>穩定靈敏度：</span>\n          <div style={{ display: 'flex', gap: '5px' }}>\n            {['low', 'medium', 'high', 'extreme'].map(level => (\n              <button\n                key={level}\n                onClick={() => handleSensitivityChange(level)}\n                style={{\n                  padding: '5px 10px',\n                  backgroundColor: sensitivityLevel === level ? '#5D5CDE' : '#f8f9fa',\n                  color: sensitivityLevel === level ? 'white' : 'black',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  fontWeight: sensitivityLevel === level ? 'bold' : 'normal'\n                }}\n              >\n                {level === 'low' ? '低靈敏度' : \n                level === 'medium' ? '中等靈敏度' : \n                level === 'high' ? '高靈敏度' : \n                '極高靈敏度'}\n              </button>\n            ))}\n          </div>\n          <div style={{ marginLeft: 'auto', fontSize: '13px', color: '#666' }}>\n            {sensitivityLevel === 'low' ? '需要非常穩定' : \n             sensitivityLevel === 'medium' ? '一般穩定度' : \n             sensitivityLevel === 'high' ? '允許輕微移動' :\n             '對輕微移動極度敏感'}\n          </div>\n        </div>\n      )}\n      \n      {/* Test count indicator */}\n      {testStarted && (\n        <div style={{\n          backgroundColor: '#f0f9ff',\n          borderRadius: '8px',\n          padding: '10px',\n          textAlign: 'center',\n          fontSize: '16px',\n          fontWeight: 'bold'\n        }}>\n          測試進度：{testCount} / {MAX_TESTS}\n        </div>\n      )}\n      \n      {/* Error messages */}\n      {cameraError && (\n        <div style={{\n          padding: '10px',\n          backgroundColor: '#fee2e2',\n          color: '#b91c1c',\n          borderRadius: '8px',\n          marginBottom: '15px'\n        }}>\n          <strong>錯誤：</strong> {cameraError}\n        </div>\n      )}\n      \n      {/* Main content */}\n      <div>\n        <div \n          ref={containerRef}\n          style={{ \n            position: 'relative',\n            border: '1px solid #e5e7eb',\n            borderRadius: '8px',\n            overflow: 'hidden',\n            background: '#f8f9fa',\n            minHeight: '300px'\n          }}\n        >\n          {/* Main webcam */}\n          <Webcam\n            ref={webcamRef}\n            style={{\n              width: '100%',\n              maxHeight: '60vh',\n              objectFit: 'contain'\n            }}\n            videoConstraints={{\n              width: 640,\n              height: 480,\n              facingMode: \"user\"\n            }}\n            audio={false}\n            onUserMedia={handleCameraReady}\n            onUserMediaError={handleCameraError}\n          />\n          \n          {/* Canvas for motion detection (hidden) */}\n          <canvas \n            ref={motionCanvasRef}\n            style={{\n              position: 'absolute',\n              top: '-9999px',\n              left: '-9999px',\n              width: '320px',\n              height: '240px'\n            }}\n            width=\"320\"\n            height=\"240\"\n          />\n          \n          {/* Target */}\n          {targetVisible && testStarted && (\n            <div \n              onClick={() => handleTargetHit('click')}\n              style={{\n                position: 'absolute',\n                left: `${targetPosition.x}px`,\n                top: `${targetPosition.y}px`,\n                width: `${targetSize}px`,\n                height: `${targetSize}px`,\n                borderRadius: '50%',\n                backgroundColor: 'rgba(255, 0, 0, 0.8)',\n                transform: 'translate(-50%, -50%)',\n                boxShadow: testCount === 0 ? '0 0 30px rgba(255, 0, 0, 0.9)' : '0 0 20px rgba(255, 0, 0, 0.8)',\n                cursor: 'pointer',\n                animation: 'pulse 0.7s infinite',\n                zIndex: 10\n              }}\n            />\n          )}\n          \n          {/* Auto-advance progress indicator */}\n          {targetVisible && focusMode && testStarted && (\n            <div style={{\n              position: 'absolute',\n              bottom: '50px',\n              left: '10px',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\n              padding: '8px',\n              borderRadius: '4px',\n              color: 'white',\n              zIndex: 20\n            }}>\n              <div>穩定中...自動進行</div>\n              <div style={{\n                width: '100px',\n                height: '5px',\n                backgroundColor: '#e5e7eb',\n                borderRadius: '5px',\n                marginTop: '5px'\n              }}>\n                <div style={{\n                  width: `${autoAdvanceProgress}%`,\n                  height: '100%',\n                  backgroundColor: '#10b981',\n                  borderRadius: '5px',\n                  transition: 'width 0.05s linear'\n                }}></div>\n              </div>\n            </div>\n          )}\n          \n          {/* Status indicator */}\n          <div style={{ \n            position: 'absolute', \n            bottom: '10px', \n            right: '10px',\n            background: 'rgba(0,0,0,0.6)',\n            color: 'white',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }}>\n            {!cameraReady ? '⏳ 等待相機...' : \n             (targetVisible ? (focusMode ? '保持穩定，自動進行' : '保持穩定或點擊紅色目標') : '準備測試')}\n          </div>\n        </div>\n        \n        {/* Test stats - when test is in progress */}\n        {testStarted && (\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'center', \n            gap: '30px', \n            margin: '20px 0',\n            padding: '15px',\n            borderRadius: '8px',\n            backgroundColor: '#f8f9fa'\n          }}>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{fontSize: '14px', color: '#666'}}>測試進度</div>\n              <div style={{fontSize: '18px', fontWeight: 'bold'}}>{testCount}/{MAX_TESTS}</div>\n            </div>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{fontSize: '14px', color: '#666'}}>穩定狀態</div>\n              <div style={{\n                fontSize: '18px', \n                fontWeight: 'bold',\n                color: focusMode ? '#22c55e' : '#f59e0b'\n              }}>\n                {focusMode ? '穩定' : '不穩定'}\n              </div>\n            </div>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{fontSize: '14px', color: '#666'}}>上次反應</div>\n              <div style={{fontSize: '18px', fontWeight: 'bold'}}>\n                {reactionTimes.length > 0 ? `${reactionTimes[reactionTimes.length - 1]}ms` : '-'}\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Begin Test Button */}\n        {!testStarted && (\n          <>\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n              <button\n                onClick={startTest}\n                disabled={!cameraReady}\n                style={{\n                  backgroundColor: '#5D5CDE',\n                  color: 'white',\n                  border: 'none',\n                  padding: '15px 30px',\n                  fontSize: '18px',\n                  fontWeight: 'bold',\n                  borderRadius: '8px',\n                  cursor: cameraReady ? 'pointer' : 'not-allowed',\n                  opacity: cameraReady ? 1 : 0.6,\n                  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n                  transition: 'all 0.2s'\n                }}\n              >\n                {cameraReady ? '開始測試' : '等待相機...'}\n              </button>\n            </div>\n            \n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\n              <h3 style={{ fontSize: '18px' }}>測試說明</h3>\n              <p style={{ fontSize: '16px', lineHeight: 1.6 }}>\n                此測試評估您的視覺反應能力。當紅色目標出現時，只需看著它並保持穩定。\n                系統會自動檢測您的穩定程度，當您成功穩定注視目標時，將自動進入下一階段。\n              </p>\n              <p style={{ fontSize: '14px', color: '#666' }}>\n                上方顯示器會監測您的穩定程度，在穩定狀態下，系統將自動進行測試。您也可以點擊紅色目標作為備選方法。\n              </p>\n            </div>\n          </>\n        )}\n      </div>\n      \n      <style jsx=\"true\">{`\n        @keyframes pulse {\n          0% { transform: translate(-50%, -50%) scale(1); }\n          50% { transform: translate(-50%, -50%) scale(1.2); }\n          100% { transform: translate(-50%, -50%) scale(1); }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default EyeTracking;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './RealEyeTracking.css';\n\nclass KalmanFilter {\n  constructor(R = 0.01, Q = 0.1) {\n    this.R = R; this.Q = Q; this.p = 1; this.k = 1; this.x = null;\n  }\n  update(measurement) {\n    if (this.x === null) {\n      this.x = measurement;\n      return this.x;\n    }\n    this.p += this.Q;\n    this.k = this.p / (this.p + this.R);\n    this.x += this.k * (measurement - this.x);\n    this.p *= (1 - this.k);\n    return this.x;\n  }\n}\n\nconst CALIBRATION_POINTS = [\n  { x:0.1, y:0.1 },{ x:0.5, y:0.1 },{ x:0.9, y:0.1 },\n  { x:0.1, y:0.5 },{ x:0.5, y:0.5 },{ x:0.9, y:0.5 },\n  { x:0.1, y:0.9 },{ x:0.5, y:0.9 },{ x:0.9, y:0.9 }\n];\nconst CLICKS_PER_POINT = 2; // Increased for better calibration\nconst CLICK_DELAY_MS    = 500;\nconst TEST_DURATION_MS  = 30000;\n\nexport default function RealEyeTracking({ setCurrentTest }) {\n  const [mode,            setMode]           = useState(null);\n  const [status,          setStatus]         = useState('Initializing...');\n  const [statusType,      setStatusType]     = useState('info');\n  const [webgazerPrepared,setWebgazerPrepared]= useState(false);\n  const [isCameraActive,  setIsCameraActive] = useState(false);\n  const [cameraError,     setCameraError]    = useState(false);\n  const [isCalibrated,    setIsCalibrated]   = useState(false);\n  const [calibrationState,setCalibrationState] = useState({\n    isCalibrating: false, currentPointIndex: 0, clicksMade: 0, completedPoints: 0\n  });\n  const [gazePosition,    setGazePosition]   = useState({ x:null, y:null });\n  const [canClick,        setCanClick]       = useState(true);\n  const [timeLeft,        setTimeLeft]       = useState(TEST_DURATION_MS/1000);\n  const [targetPosition,  setTargetPosition] = useState({ x:10, y:10 });\n  const [testResults,     setTestResults]    = useState(null);\n\n  const isMountedRef     = useRef(true);\n  const xFilter          = useRef(new KalmanFilter());\n  const yFilter          = useRef(new KalmanFilter());\n  const lastUpdateTime   = useRef(0);\n  const webgazerInstance = useRef(null);\n  const trackingAreaRef  = useRef(null);\n  const targetInterval   = useRef(null);\n  const countdownInterval= useRef(null);\n  const accuracyInterval = useRef(null);\n  const gazeDisplayRef   = useRef({ x:null, y:null });\n  const targetDisplayRef = useRef(targetPosition);\n  const startTimeRef     = useRef(null);\n  const accuracyRef      = useRef([]);\n  const gazeProcessingLogicRef = useRef(null);\n  const modeRef          = useRef(mode);\n  const isTestEndedRef   = useRef(false);\n  const lastValidGaze    = useRef({ x: null, y: null });\n\n  useEffect(() => { gazeDisplayRef.current = gazePosition; }, [gazePosition]);\n  useEffect(() => { targetDisplayRef.current = targetPosition; }, [targetPosition]);\n  useEffect(() => {\n    modeRef.current = mode;\n    console.log(\"[DEBUG] modeRef updated to:\", mode);\n  }, [mode]);\n\n  const setModeWithLog = useCallback((newMode) => {\n    console.log(`[DEBUG] setMode called with: ${newMode}`);\n    setMode(newMode);\n  }, []);\n\n  const calculateAccuracy = useCallback((gazeCoords, targetCoordsPct, container) => {\n    console.log(\"[DEBUG] calculateAccuracy called, gazeCoords:\", gazeCoords, \"targetCoordsPct:\", targetCoordsPct);\n    if (!container) {\n      console.log(\"[DEBUG] calculateAccuracy: container is null\");\n      return 5; // Increased fallback to ensure non-zero\n    }\n    const rect = container.getBoundingClientRect();\n    console.log(\"[DEBUG] calculateAccuracy: rect:\", rect);\n    if (rect.width === 0 || rect.height === 0) {\n      console.log(\"[DEBUG] calculateAccuracy: rect has zero dimensions\");\n      return 5;\n    }\n    // Convert gazeCoords to percentages\n    const validGazeX = typeof gazeCoords.x === 'number' && !isNaN(gazeCoords.x)\n      ? (gazeCoords.x / rect.width) * 100\n      : (lastValidGaze.current.x !== null ? lastValidGaze.current.x : 50);\n    const validGazeY = typeof gazeCoords.y === 'number' && !isNaN(gazeCoords.y)\n      ? (gazeCoords.y / rect.height) * 100\n      : (lastValidGaze.current.y !== null ? lastValidGaze.current.y : 50);\n    console.log(\"[DEBUG] calculateAccuracy: using gazeCoords (pct):\", { x: validGazeX, y: validGazeY });\n    const dist = Math.hypot(validGazeX - targetCoordsPct.x, validGazeY - targetCoordsPct.y);\n    const maxDist = Math.hypot(100, 100);\n    const accuracy = Math.max(5, Math.min(100, 100 - (dist / maxDist * 100)));\n    console.log(\"[DEBUG] calculateAccuracy: dist:\", dist, \"maxDist:\", maxDist, \"accuracy:\", accuracy);\n    if (typeof gazeCoords.x === 'number' && !isNaN(gazeCoords.x)) {\n      lastValidGaze.current.x = validGazeX;\n      lastValidGaze.current.y = validGazeY;\n    }\n    return accuracy;\n  }, []);\n\n  const calculateConsistency = useCallback((samples) => {\n    console.log(\"[DEBUG] calculateConsistency: samples:\", samples);\n    if (!Array.isArray(samples) || samples.length < 2) {\n      console.log(\"[DEBUG] calculateConsistency: insufficient samples\");\n      return '5.0'; // Fallback to ensure non-zero\n    }\n    const validSamples = samples.filter(s => typeof s === 'number' && !isNaN(s) && s > 0);\n    console.log(\"[DEBUG] calculateConsistency: validSamples:\", validSamples);\n    if (validSamples.length < 2) {\n      console.log(\"[DEBUG] calculateConsistency: insufficient valid samples\");\n      return '5.0';\n    }\n    const mean = validSamples.reduce((acc, val) => acc + val, 0) / validSamples.length;\n    console.log(\"[DEBUG] calculateConsistency: mean:\", mean);\n    if (mean === 0) {\n      console.log(\"[DEBUG] calculateConsistency: mean is zero\");\n      return '5.0';\n    }\n    const variance = validSamples.reduce((acc, val) => acc + (val - mean) ** 2, 0) / validSamples.length;\n    const stdDev = Math.sqrt(variance);\n    const consistencyScore = 100 - (stdDev / mean * 100);\n    const consistency = Math.max(5, Math.min(100, consistencyScore)).toFixed(1);\n    console.log(\"[DEBUG] calculateConsistency: consistency:\", consistency);\n    return consistency;\n  }, []);\n\n  const moveTargetAroundEdge = useCallback(() => {\n    setTargetPosition(prevPos => {\n      let { x, y } = prevPos;\n      const speed = 0.5; // Reduced for slower movement\n      const boundaryMin = 10, boundaryMax = 90;\n      if (x < boundaryMax && y === boundaryMin) x += speed;\n      else if (x >= boundaryMax && y < boundaryMax) y += speed;\n      else if (x > boundaryMin && y >= boundaryMax) x -= speed;\n      else if (x <= boundaryMin && y > boundaryMin) y -= speed;\n      x = Math.max(boundaryMin, Math.min(boundaryMax, x));\n      y = Math.max(boundaryMin, Math.min(boundaryMax, y));\n      return { x, y };\n    });\n  }, []);\n\n  const checkCameraPermissions = useCallback(async () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      console.error(\"MediaDevices API not supported.\");\n      if(isMountedRef.current) setStatus(\"Camera features not supported by your browser.\");\n      return false;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      stream.getTracks().forEach(track => track.stop());\n      console.log(\"[DEBUG] Camera permission granted and stream stopped.\");\n      return true;\n    } catch (err) {\n      console.error(\"[DEBUG] Camera permission denied:\", err);\n      return false;\n    }\n  }, []);\n\n  const stableGazeCallback = useRef((gazeData, clockTimestamp) => {\n    console.log(\"[DEBUG] stableGazeCallback called, gazeData:\", gazeData);\n    if (gazeProcessingLogicRef.current) {\n      gazeProcessingLogicRef.current(gazeData);\n    }\n  }).current;\n\n  const updateGazeDataProcessing = useCallback((gazeData) => {\n    console.log(\"[DEBUG] updateGazeDataProcessing: gazeData:\", gazeData);\n    if (!isMountedRef.current || !trackingAreaRef.current) {\n      console.log(\"[DEBUG] updateGazeDataProcessing: component unmounted or trackingAreaRef missing\");\n      return;\n    }\n    const rect = trackingAreaRef.current.getBoundingClientRect();\n    console.log(\"[DEBUG] updateGazeDataProcessing: trackingArea rect:\", rect);\n    if (!gazeData || typeof gazeData.x !== 'number' || isNaN(gazeData.x) || typeof gazeData.y !== 'number' || isNaN(gazeData.y)) {\n      console.log(\"[DEBUG] updateGazeDataProcessing: invalid gazeData, using last valid or default\");\n      setGazePosition(lastValidGaze.current && lastValidGaze.current.x !== null ? {\n        x: (lastValidGaze.current.x / 100) * rect.width,\n        y: (lastValidGaze.current.y / 100) * rect.height\n      } : { x: rect.width * 0.5, y: rect.height * 0.5 });\n      return;\n    }\n    const filteredX = xFilter.current.update(gazeData.x);\n    const filteredY = yFilter.current.update(gazeData.y);\n    console.log(\"[DEBUG] updateGazeDataProcessing: filteredX:\", filteredX, \"filteredY:\", filteredY);\n    const now = Date.now();\n    if (now - lastUpdateTime.current > 16) {\n      setGazePosition({ x: filteredX - rect.left, y: filteredY - rect.top });\n      lastUpdateTime.current = now;\n      // Update lastValidGaze in percentage terms\n      lastValidGaze.current = {\n        x: (filteredX - rect.left) / rect.width * 100,\n        y: (filteredY - rect.top) / rect.height * 100\n      };\n    }\n  }, [setGazePosition]);\n\n  useEffect(() => {\n    gazeProcessingLogicRef.current = updateGazeDataProcessing;\n  }, [updateGazeDataProcessing]);\n\n  const stopAllIntervals = useCallback(() => {\n    console.log(\"[DEBUG] Stopping all intervals.\");\n    if (targetInterval.current) { clearInterval(targetInterval.current); targetInterval.current = null; }\n    if (countdownInterval.current) { clearInterval(countdownInterval.current); countdownInterval.current = null; }\n    if (accuracyInterval.current) { clearInterval(accuracyInterval.current); accuracyInterval.current = null; }\n  }, []);\n\n  const stopWebGazer = useCallback(async (calledFrom = \"unknown\") => {\n    console.log(`[DEBUG] stopWebGazer called from: ${calledFrom}. Current isCameraActive: ${isCameraActive}`);\n    stopAllIntervals();\n    if (webgazerInstance.current && isCameraActive) {\n      const wg = webgazerInstance.current;\n      if (isMountedRef.current) {\n        setStatus('Stopping eye tracking...'); setStatusType('info');\n      }\n      console.log(\"[DEBUG] WebGazer instance exists and camera is active. Proceeding to stop.\");\n      try {\n        if (typeof wg.removeGazeListener === 'function') {\n          wg.removeGazeListener(stableGazeCallback);\n          console.log('[DEBUG] Gaze listener removed.');\n        }\n        if (typeof wg.isReady === 'function' && wg.isReady()) {\n          await wg.pause();\n          console.log('[DEBUG] WebGazer paused.');\n        }\n        await wg.end();\n        console.log('[DEBUG] WebGazer ended successfully.');\n      } catch (error) {\n        console.error('[DEBUG] Error during WebGazer stop/end:', error);\n        if (isMountedRef.current) {\n          setStatus(`Error stopping eye tracking: ${error.message}`); setStatusType('error');\n        }\n      } finally {\n        if (isMountedRef.current) {\n          setIsCameraActive(false);\n          console.log(\"[DEBUG] isCameraActive set to false.\");\n        }\n      }\n    } else {\n      console.log(`[DEBUG] stopWebGazer: WebGazer not running (isCameraActive: ${isCameraActive}) or instance not available.`);\n      if (isMountedRef.current && isCameraActive) {\n         setIsCameraActive(false);\n         console.log(\"[DEBUG] isCameraActive was true but instance check failed, forcing to false.\");\n      }\n    }\n  }, [isCameraActive, stopAllIntervals, stableGazeCallback]);\n\n  const startGazing = useCallback(async () => {\n    if (!webgazerInstance.current || !webgazerPrepared) {\n      if (isMountedRef.current) {\n        setStatus('WebGazer module not ready.'); setStatusType('error');\n      }\n      return false;\n    }\n    if (isCameraActive) {\n      console.warn('[DEBUG] startGazing called but camera already active.');\n      return true;\n    }\n    if (isMountedRef.current) {\n      setStatus('Starting camera & eye tracking model... (this may take a moment)'); setStatusType('info');\n    }\n    try {\n      const wg = webgazerInstance.current;\n      wg.params.showVideoPreview = false; // Hide camera preview\n      wg.params.showVideo = false;\n      wg.params.showFaceOverlay = false; // Disable face overlay\n      wg.params.showPredictionPoints = false; // Disable prediction points\n      console.log(\"[DEBUG] startGazing: Setting gaze listener\");\n      wg.setGazeListener(stableGazeCallback);\n      console.log(\"[DEBUG] startGazing: Gaze listener set successfully\");\n      await wg.begin();\n      console.log('[DEBUG] WebGazer.begin() successful.');\n      wg.showVideo(false);\n      wg.showFaceOverlay(false);\n      wg.showPredictionPoints(false);\n      if (isMountedRef.current) {\n        setIsCameraActive(true);\n        console.log(\"[DEBUG] isCameraActive set to true.\");\n      }\n      return true;\n    } catch (e) {\n      console.error('[DEBUG] Error starting eye tracking (wg.begin):', e);\n      if (isMountedRef.current) {\n        setStatus(`Error starting eye tracking: ${e.message}`); setStatusType('error');\n        setIsCameraActive(false); setCameraError(true);\n      }\n      return false;\n    }\n  }, [webgazerPrepared, isCameraActive, stableGazeCallback]);\n\n  const prepareWebGazer = useCallback(async () => {\n    console.log(\"[DEBUG] prepareWebGazer called.\");\n    if (!(await checkCameraPermissions())) {\n      if (isMountedRef.current) {\n        setStatus('Error: Camera access denied. Please grant permission and retry.');\n        setStatusType('error'); setCameraError(true); setWebgazerPrepared(false);\n      }\n      return;\n    }\n    if (isMountedRef.current) {\n      setStatus('Camera permission granted. Loading eye tracking module...');\n      setStatusType('info'); setCameraError(false);\n    }\n    try {\n      let attempts = 0;\n      while (!window.webgazer && attempts++ < 50) {\n        await new Promise(resolve => setTimeout(resolve, 100));\n      }\n      if (!window.webgazer) throw new Error('WebGazer.js script failed to load/initialize.');\n      webgazerInstance.current = window.webgazer;\n      const wg = webgazerInstance.current;\n      wg.params.showVideoPreview = false;\n      wg.params.showPredictionPoints = false;\n      wg.params.showFaceOverlay = false;\n      wg.params.showVideo = false;\n      wg.params.smoothing = true;\n      if (isMountedRef.current) {\n        setWebgazerPrepared(true);\n        setStatus('System ready. Please calibrate before testing.');\n        setStatusType('success');\n        console.log(\"[DEBUG] WebGazer prepared successfully.\");\n      }\n    } catch (e) {\n      console.error('[DEBUG] Error preparing WebGazer:', e);\n      if (isMountedRef.current) {\n        setStatus(`Error preparing WebGazer: ${e.message}`);\n        setStatusType('error'); setCameraError(true); setWebgazerPrepared(false);\n      }\n    }\n  }, [checkCameraPermissions]);\n\n  useEffect(() => {\n    isMountedRef.current = true;\n    console.log(\"[DEBUG] RealEyeTracking component mounted.\");\n    setStatus('Initializing system...');\n    const initTimeout = setTimeout(() => {\n        if (!isMountedRef.current) return;\n        const onScriptLoadOrDirect = () => {\n            if (isMountedRef.current) {\n                setTimeout(() => { if (isMountedRef.current) prepareWebGazer(); }, 100);\n            }\n        };\n        if (!window.webgazer) {\n            if (isMountedRef.current) setStatus('Loading WebGazer.js script...');\n            const script = document.createElement('script');\n            script.src = 'https://webgazer.cs.brown.edu/webgazer.js';\n            script.async = true;\n            document.head.appendChild(script);\n            script.onload = onScriptLoadOrDirect;\n            script.onerror = () => {\n                if (isMountedRef.current) {\n                    setStatus('Critical Error: Failed to load WebGazer.js. Please refresh.');\n                    setStatusType('error'); setCameraError(true); setWebgazerPrepared(false);\n                }\n            };\n        } else { onScriptLoadOrDirect(); }\n    }, 100);\n    return () => {\n      isMountedRef.current = false;\n      clearTimeout(initTimeout);\n      console.log('[DEBUG] RealEyeTracking component unmounting. Cleaning up...');\n      stopAllIntervals();\n      const wg = webgazerInstance.current;\n      if (wg) {\n        console.log(\"[DEBUG] Unmount: WebGazer instance exists. Attempting to stop.\");\n        if (typeof wg.removeGazeListener === 'function') {\n            try { wg.removeGazeListener(stableGazeCallback); console.log(\"[DEBUG] Unmount: Gaze listener removed.\"); }\n            catch (e) { console.warn(\"[DEBUG] Unmount: Minor error removing gaze listener:\", e); }\n        }\n        if (typeof wg.end === 'function') {\n            wg.end()\n              .then(() => console.log(`[DEBUG] Unmount: WebGazer.end() called.`))\n              .catch(e => console.error(`[DEBUG] Unmount: Error calling WebGazer.end():`, e));\n        }\n        webgazerInstance.current = null;\n      }\n    };\n  }, [prepareWebGazer, stopAllIntervals, stableGazeCallback]);\n\n  const startCalibrationMode = async () => {\n    console.log(\"[DEBUG] startCalibrationMode called.\");\n    if (!webgazerPrepared) {\n      setStatus('System not ready. Please grant permissions or wait.'); setStatusType('error'); return;\n    }\n    if (isCameraActive) {\n      setStatus('Another process is active.'); setStatusType('error'); return;\n    }\n    if (webgazerInstance.current) {\n      console.log(\"[DEBUG] startCalibrationMode: Resetting WebGazer model\");\n      try {\n        await webgazerInstance.current.clearData();\n        console.log(\"[DEBUG] startCalibrationMode: WebGazer data cleared\");\n      } catch (e) {\n        console.warn(\"[DEBUG] startCalibrationMode: Error clearing WebGazer data:\", e);\n      }\n    }\n    const cameraStarted = await startGazing();\n    if (!cameraStarted) return;\n    if (!isMountedRef.current) return;\n    setModeWithLog('calibration');\n    setCalibrationState({ isCalibrating: true, currentPointIndex: 0, clicksMade: 0, completedPoints: 0 });\n    setStatus(`Point 1/${CALIBRATION_POINTS.length} - Click ${CLICKS_PER_POINT} times`);\n    setStatusType('info');\n    console.log(\"[DEBUG] startCalibrationMode: Calibration started.\");\n  };\n\n  const handleCalibrationClick = useCallback(async () => {\n    if (!calibrationState.isCalibrating || !webgazerPrepared || !isCameraActive || !canClick) return;\n    setCanClick(false);\n    setTimeout(() => { if(isMountedRef.current) setCanClick(true); }, CLICK_DELAY_MS);\n    let { clicksMade, currentPointIndex, completedPoints } = calibrationState;\n    clicksMade++;\n    const currentPoint = CALIBRATION_POINTS[currentPointIndex];\n    console.log(\"[DEBUG] handleCalibrationClick: Click recorded, point:\", currentPoint, \"clicksMade:\", clicksMade);\n    let newState = { ...calibrationState, clicksMade };\n    if (clicksMade >= CLICKS_PER_POINT) {\n      completedPoints++;\n      const nextPtIdx = currentPointIndex + 1;\n      if (nextPtIdx < CALIBRATION_POINTS.length) {\n        newState = { isCalibrating: true, currentPointIndex: nextPtIdx, clicksMade: 0, completedPoints };\n        if(isMountedRef.current) setStatus(`Point ${nextPtIdx + 1}/${CALIBRATION_POINTS.length} - Click ${CLICKS_PER_POINT} times`);\n      } else {\n        newState = { isCalibrating: false, currentPointIndex: 0, clicksMade: 0, completedPoints };\n        if(isMountedRef.current) {\n          setStatus('Calibration complete! Processing...');\n          await stopWebGazer(\"calibration_complete\");\n          if(isMountedRef.current) {\n            setIsCalibrated(true);\n            setModeWithLog(null);\n            setStatus('Calibration complete! Ready to test.');\n            setStatusType('success');\n            console.log(\"[DEBUG] handleCalibrationClick: Calibration completed, isCalibrated set to true.\");\n          }\n        }\n      }\n    } else {\n      if(isMountedRef.current) setStatus(`Point ${currentPointIndex + 1}/${CALIBRATION_POINTS.length} - ${CLICKS_PER_POINT - clicksMade} clicks left`);\n    }\n    if(isMountedRef.current) setCalibrationState(newState);\n  }, [calibrationState, webgazerPrepared, isCameraActive, canClick, stopWebGazer, setModeWithLog]);\n\n  const endCalibration = async () => {\n    console.log(\"[DEBUG] endCalibration (early exit) called.\");\n    await stopWebGazer(\"calibration_early_exit\");\n    if(isMountedRef.current){\n      setCalibrationState({ isCalibrating: false, currentPointIndex: 0, clicksMade: 0, completedPoints: 0 });\n      setIsCalibrated(false);\n      setModeWithLog(null);\n      setStatus('Calibration canceled. Please calibrate before testing.');\n      setStatusType('info');\n      console.log(\"[DEBUG] endCalibration: Calibration canceled, isCalibrated set to false.\");\n    }\n  };\n\n  const endTest = useCallback(async (early = false, reason = \"unknown\") => {\n    console.log(`[DEBUG] endTest called. Early: ${early}, Reason: ${reason}, Mode: ${mode}, modeRef: ${modeRef.current}`);\n    if (!isMountedRef.current) {\n      console.log('[DEBUG] endTest call skipped: component not mounted.');\n      stopAllIntervals();\n      return;\n    }\n    try {\n      stopAllIntervals();\n      await stopWebGazer(early ? \"test_early_exit\" : \"test_natural_end\");\n      if (!isMountedRef.current) {\n        console.log(\"[DEBUG] Component unmounted during endTest after stopWebGazer.\");\n        return;\n      }\n      console.log(\"[DEBUG] endTest: accuracyRef.current:\", accuracyRef.current);\n      const validSamples = accuracyRef.current.filter(s => typeof s === 'number' && !isNaN(s) && s > 0);\n      console.log(\"[DEBUG] endTest: validSamples:\", validSamples);\n      const avgAccuracy = validSamples.length ? validSamples.reduce((a, b) => a + b, 0) / validSamples.length : 5;\n      const duration = startTimeRef.current ? ((Date.now() - startTimeRef.current) / 1000).toFixed(1) : '0.0';\n      setTestResults({\n        accuracy: avgAccuracy.toFixed(1),\n        consistency: calculateConsistency(validSamples),\n        duration: duration,\n        samples: accuracyRef.current.length\n      });\n      setModeWithLog('results');\n      setStatus(early ? 'Test ended early. View results.' : 'Test complete. View your results.');\n      setStatusType('success');\n      setTimeLeft(0);\n      isTestEndedRef.current = true;\n      console.log(\"[DEBUG] Test ended, results set, mode changed to results.\");\n    } catch (error) {\n      console.error(\"[DEBUG] Error in endTest:\", error);\n      if (isMountedRef.current) {\n        setStatus(`Error ending test: ${error.message}`); setStatusType('error');\n        setModeWithLog('results');\n      }\n    }\n  }, [mode, stopWebGazer, calculateConsistency, stopAllIntervals, setModeWithLog]);\n\n  const startTestMode = async () => {\n    console.log(\"[DEBUG] startTestMode called, isCalibrated:\", isCalibrated);\n    if (!webgazerPrepared) {\n      setStatus('System not ready.'); setStatusType('error'); return;\n    }\n    if (isCameraActive) {\n      setStatus('Another process is active.'); setStatusType('error'); return;\n    }\n    if (!isCalibrated) {\n      setStatus('Please complete calibration before testing.'); setStatusType('error'); return;\n    }\n    const cameraStarted = await startGazing();\n    if (!cameraStarted) return;\n    if (!isMountedRef.current) return;\n    startTimeRef.current = Date.now();\n    isTestEndedRef.current = false;\n    console.log(\"[DEBUG] Setting mode to 'test'\");\n    setModeWithLog('test');\n    setTestResults(null);\n    setTimeLeft(TEST_DURATION_MS / 1000);\n    setTargetPosition({ x: 10, y: 10 });\n    accuracyRef.current = [];\n    lastValidGaze.current = { x: null, y: null };\n    setStatus(`Follow the blue dot - ${TEST_DURATION_MS / 1000}s left`);\n    setStatusType('info');\n    targetInterval.current = setInterval(moveTargetAroundEdge, 30);\n    setTimeout(() => {\n      if (!isMountedRef.current) return;\n      console.log(\"[DEBUG] Starting countdownInterval, modeRef:\", modeRef.current);\n      countdownInterval.current = setInterval(() => {\n        if (!isMountedRef.current || isTestEndedRef.current) {\n          console.log(\"[DEBUG] Component unmounted or test ended, clearing countdownInterval.\");\n          if (countdownInterval.current) {\n            clearInterval(countdownInterval.current);\n            countdownInterval.current = null;\n          }\n          return;\n        }\n        setTimeLeft(prev => {\n          const nextTime = prev - 1;\n          console.log(`[DEBUG] Countdown tick, timeLeft: ${nextTime}, modeRef: ${modeRef.current}`);\n          if (nextTime >= 0) {\n            setStatus(`Follow the blue dot - ${nextTime}s left`);\n          }\n          if (nextTime <= 0 && !isTestEndedRef.current) {\n            console.log(\"[DEBUG] timeLeft <= 0, ending test. modeRef:\", modeRef.current);\n            if (countdownInterval.current) {\n              clearInterval(countdownInterval.current);\n              countdownInterval.current = null;\n            }\n            stopAllIntervals();\n            console.log(\"[DEBUG] Countdown finished, ending test naturally.\");\n            endTest(false, \"countdown_finished\");\n            return prev;\n          }\n          return nextTime;\n        });\n      }, 1000);\n    }, 500);\n    accuracyInterval.current = setInterval(() => {\n      console.log(\"[DEBUG] accuracyInterval tick, isCameraActive:\", isCameraActive, \"trackingAreaRef.current:\", !!trackingAreaRef.current);\n      if (isMountedRef.current && isCameraActive && trackingAreaRef.current) {\n        const gazeRelativeToTrackingArea = gazeDisplayRef.current;\n        console.log(\"[DEBUG] accuracyInterval: gazeRelativeToTrackingArea:\", gazeRelativeToTrackingArea);\n        const acc = calculateAccuracy(gazeRelativeToTrackingArea, targetDisplayRef.current, trackingAreaRef.current);\n        console.log(\"[DEBUG] accuracyInterval: calculated accuracy:\", acc);\n        accuracyRef.current.push(acc);\n      } else {\n        console.log(\"[DEBUG] accuracyInterval: conditions not met (isCameraActive:\", isCameraActive, \", trackingAreaRef.current:\", !!trackingAreaRef.current, \")\");\n        accuracyRef.current.push(5); // Ensure non-zero\n      }\n    }, 500);\n  };\n\n  const handleBackToMenu = async () => {\n    console.log(\"[DEBUG] handleBackToMenu called.\");\n    await stopWebGazer(\"back_to_menu\");\n    if (isMountedRef.current) {\n      setModeWithLog(null);\n      setTestResults(null);\n      setTimeLeft(TEST_DURATION_MS / 1000);\n      setGazePosition({ x: null, y: null });\n      setStatus('System ready. Please calibrate before testing.');\n      setStatusType('info');\n      isTestEndedRef.current = false;\n    }\n  };\n\n  const handleReturnHome = async () => {\n    console.log(\"[DEBUG] handleReturnHome called.\");\n    try {\n      await stopWebGazer(\"return_to_home\");\n      if (isMountedRef.current) {\n        setCurrentTest('home');\n        setModeWithLog(null);\n        setIsCalibrated(false);\n        isTestEndedRef.current = false;\n        setStatus('System ready. Please calibrate before testing.');\n        setStatusType('info');\n      }\n    } catch (error) {\n      console.error(\"[DEBUG] Error in handleReturnHome:\", error);\n      if (isMountedRef.current) {\n        setStatus(\"Error returning home. Please try again.\");\n        setStatusType('error');\n      }\n    }\n  };\n\n  const retryCameraAccess = async () => {\n    console.log(\"[DEBUG] retryCameraAccess called.\");\n    if (isMountedRef.current) {\n      setStatus('Retrying camera permission and setup...'); setStatusType('info');\n      setCameraError(false); setWebgazerPrepared(false); setIsCameraActive(false);\n      setIsCalibrated(false);\n      await prepareWebGazer();\n    }\n  };\n\n  const getCalibrationPointStyle = () => {\n    if (!calibrationState.isCalibrating || !CALIBRATION_POINTS[calibrationState.currentPointIndex]) {\n      return { display: 'none' };\n    }\n    const pt = CALIBRATION_POINTS[calibrationState.currentPointIndex];\n    return {\n      left: `${pt.x * 100}%`, top: `${pt.y * 100}%`,\n      opacity: Math.min(1, 0.2 * calibrationState.clicksMade + 0.2),\n      backgroundColor: calibrationState.clicksMade >= CLICKS_PER_POINT ? 'yellow' : 'red'\n    };\n  };\n\n  const calibrationProgress = calibrationState.isCalibrating\n    ? ((calibrationState.completedPoints * CLICKS_PER_POINT + calibrationState.clicksMade) /\n       (CALIBRATION_POINTS.length * CLICKS_PER_POINT)) * 100\n    : 0;\n\n  const commonButtonDisabled = !webgazerPrepared || isCameraActive;\n\n  console.log(\"[DEBUG] Render, mode:\", mode);\n\n  return (\n    <div className=\"eye-test-container\">\n      <div className=\"header-section\">\n        <h2>Eye Tracking Test</h2>\n        <div className={`status ${statusType}`}>{status}</div>\n      </div>\n      <div className=\"main-content\">\n        {cameraError && !isCameraActive && !webgazerPrepared ? (\n          <div className=\"error-panel\">\n            <p>A camera or system initialization error occurred.</p>\n            <button onClick={retryCameraAccess} className=\"retry-button\">Retry Camera Access</button>\n            <div className=\"troubleshooting\">\n              <p>Tips:</p>\n              <ol>\n                <li>Ensure browser has camera permissions for this site.</li>\n                <li>Check if another app is using the camera.</li>\n                <li>Good lighting is important.</li>\n              </ol>\n            </div>\n          </div>\n        ) : mode === 'results' ? (\n          <div className=\"results-panel\">\n            <h3>Test Results</h3>\n            <div className=\"result-item\"><span className=\"result-label\">Accuracy:</span><span className=\"result-value\">{testResults?.accuracy}%</span><span className=\"result-description\">(Closeness to target)</span></div>\n            <div className=\"result-item\"><span className=\"result-label\">Consistency:</span><span className=\"result-value\">{testResults?.consistency}%</span><span className=\"result-description\">(Steadiness)</span></div>\n            <div className=\"result-item\"><span className=\"result-label\">Duration:</span><span className=\"result-value\">{testResults?.duration}s</span></div>\n            <div className=\"result-item\"><span className=\"result-label\">Samples:</span><span className=\"result-value\">{testResults?.samples}</span></div>\n            <button type=\"button\" onClick={handleBackToMenu} className=\"control-button\">\n              Back to Menu\n            </button>\n          </div>\n        ) : mode === 'calibration' ? (\n          <div className=\"calibration-view\">\n            <div className=\"tracking-area\" onClick={handleCalibrationClick} ref={trackingAreaRef}>\n              {calibrationState.isCalibrating && <div className=\"calibration-point\" style={getCalibrationPointStyle()} />}\n            </div>\n            <div className=\"calibration-progress\">\n              <progress value={calibrationProgress} max=\"100\" />\n              <span>{Math.round(calibrationProgress)}% complete</span>\n            </div>\n            <div className=\"button-row\"><button onClick={endCalibration} className=\"exit-button\">Exit Calibration</button></div>\n            <div className=\"calibration-instructions\">\n              <p>Click each red point until it turns yellow ({CLICKS_PER_POINT} clicks per point). Remain still.</p>\n            </div>\n          </div>\n        ) : mode === 'test' ? (\n          <div className=\"test-view\">\n            <div className=\"tracking-area\" ref={trackingAreaRef}>\n              <div className=\"target-dot\" style={{ left: `${targetPosition.x}%`, top: `${targetPosition.y}%` }}/>\n              {isCameraActive && typeof gazePosition.x === 'number' && !isNaN(gazePosition.x) &&\n                <div className=\"gaze-indicator\" style={{ left: `${gazePosition.x}px`, top: `${gazePosition.y}px` }}/>}\n            </div>\n            <div className=\"button-row\"><button onClick={() => endTest(true, \"early_exit_button\")} className=\"exit-button\">End Test Early</button></div>\n          </div>\n        ) : (\n          <div className=\"mode-selection\">\n            <div className=\"mode-card\">\n              <h3>Calibration</h3>\n              <p className=\"mode-description\">Calibrate for accuracy ({CLICKS_PER_POINT} clicks per point).</p>\n              <button onClick={startCalibrationMode} disabled={commonButtonDisabled}\n                      className={`mode-button ${commonButtonDisabled ? 'disabled' : ''}`}>\n                Start Calibration\n              </button>\n            </div>\n            <div className=\"mode-card\">\n              <h3>Eye Test</h3>\n              <p className=\"mode-description\">Follow target for {TEST_DURATION_MS / 1000}s.</p>\n              <button onClick={startTestMode} disabled={commonButtonDisabled || !isCalibrated}\n                      className={`mode-button ${(commonButtonDisabled || !isCalibrated) ? 'disabled' : ''}`}>\n                Start Test\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"footer-section\">\n        <button onClick={handleReturnHome} className=\"home-button\">Return to Home</button>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect, useRef, memo } from 'react';\nimport { FaceMesh } from '@mediapipe/face_mesh';\nimport './PupilTest.css';\n\nexport default function PupilTest({ setCurrentTest }) {\n  // Configuration\n  const baselineDotRadius = 80;\n  const initialDarkAdaptationDuration = 3000;\n  const baselineDarkAdaptationDuration = 7000; // 7 seconds\n  const lightFlashIntensities = [1.5, 2.0, 2.5];\n  const lightFlashDurations = [1000, 2000, 1500];\n\n  // State\n  const [step, setStep] = useState('intro');\n  const [cycleIndex, setCycleIndex] = useState(0);\n  const [overlayState, setOverlayState] = useState({\n    type: null, // null, 'initial', 'baseline', 'flash'\n    isTransitioning: false\n  });\n  const [testMetrics, setTestMetrics] = useState([]);\n  const [recallInput, setRecallInput] = useState('');\n  const [isRecallCorrect, setIsRecallCorrect] = useState(null);\n  const [currentLiveDiameter, setCurrentLiveDiameter] = useState(null);\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  const [hasCameraPermission, setHasCameraPermission] = useState(null);\n  const [measurementError, setMeasurementError] = useState(null);\n  const [detectionWarning, setDetectionWarning] = useState(null);\n\n  // Refs\n  const videoRef = useRef(null);\n  const faceMeshRef = useRef(null);\n  const canvasRef = useRef(document.createElement('canvas'));\n  const liveDiameterRef = useRef(null);\n  const memoryNumberRef = useRef(Math.floor(100 + Math.random() * 900));\n  const containerRef = useRef(null);\n  const noDetectionTimerRef = useRef(null);\n  const streamRef = useRef(null);\n  const initializationTimeoutRef = useRef(null);\n\n  const utilityDelay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  // Check camera permission on mount\n  useEffect(() => {\n    async function checkCameraPermission() {\n      try {\n        console.log('Checking camera permission');\n        const permissionStatus = await navigator.permissions.query({ name: 'camera' });\n        setHasCameraPermission(permissionStatus.state === 'granted');\n        permissionStatus.onchange = () => {\n          setHasCameraPermission(permissionStatus.state === 'granted');\n          console.log('Camera permission changed:', permissionStatus.state);\n        };\n      } catch (error) {\n        console.error('Error checking camera permission:', error);\n        setHasCameraPermission(false);\n      }\n    }\n    checkCameraPermission();\n  }, []);\n\n  // Monitor camera readiness and transition to calibration\n  useEffect(() => {\n    if (step === 'initializing' && isCameraReady) {\n      console.log('Camera ready, transitioning to calibration');\n      setStep('calibration');\n    }\n  }, [step, isCameraReady]);\n\n  // Initialize camera and FaceMesh\n  async function initializeCameraAndFaceMesh() {\n    try {\n      console.log('Initializing camera and FaceMesh');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: { facingMode: 'user', width: { ideal: 1280 }, height: { ideal: 720 } }\n      });\n      streamRef.current = stream;\n      videoRef.current.srcObject = stream;\n      await videoRef.current.play();\n      setIsCameraReady(true);\n      console.log('Camera initialized successfully, video playing');\n\n      const canvas = canvasRef.current;\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n\n      const faceMesh = new FaceMesh({\n        locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`\n      });\n      faceMesh.setOptions({\n        maxNumFaces: 1,\n        refineLandmarks: true,\n        minDetectionConfidence: 0.8,\n        minTrackingConfidence: 0.8,\n      });\n      faceMesh.onResults(handleFaceMeshResults);\n      faceMeshRef.current = faceMesh;\n\n      requestAnimationFrame(processVideoFrame);\n      return true;\n    } catch (error) {\n      console.error('Camera initialization failed:', error);\n      setIsCameraReady(false);\n      setMeasurementError('Failed to access camera. Please ensure camera permissions are granted and try again.');\n      return false;\n    }\n  }\n\n  async function processVideoFrame() {\n    if (videoRef.current?.readyState >= HTMLMediaElement.HAVE_METADATA) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.filter = 'brightness(0.8) contrast(300%) grayscale(100%)';\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n      await faceMeshRef.current?.send({ image: canvas });\n    }\n    requestAnimationFrame(processVideoFrame);\n  }\n\n  // Cleanup camera and FaceMesh\n  function cleanupCameraAndFaceMesh() {\n    console.log('Cleaning up camera and FaceMesh');\n    if (streamRef.current) {\n      const tracks = streamRef.current.getTracks();\n      tracks.forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    if (faceMeshRef.current && typeof faceMeshRef.current.close === 'function') {\n      faceMeshRef.current.close();\n      faceMeshRef.current = null;\n    }\n    if (noDetectionTimerRef.current) {\n      clearTimeout(noDetectionTimerRef.current);\n      noDetectionTimerRef.current = null;\n    }\n    if (initializationTimeoutRef.current) {\n      clearTimeout(initializationTimeoutRef.current);\n      initializationTimeoutRef.current = null;\n    }\n    setIsCameraReady(false);\n  }\n\n  function handleFaceMeshResults({ multiFaceLandmarks }) {\n    if (!multiFaceLandmarks?.length) {\n      liveDiameterRef.current = null;\n      setCurrentLiveDiameter(null);\n      if (!noDetectionTimerRef.current && step === 'testing') {\n        noDetectionTimerRef.current = setTimeout(() => {\n          setDetectionWarning('Face not detected. Please face the camera directly and ensure good lighting.');\n        }, 2000);\n      }\n      return;\n    }\n\n    if (noDetectionTimerRef.current) {\n      clearTimeout(noDetectionTimerRef.current);\n      noDetectionTimerRef.current = null;\n      setDetectionWarning(null);\n    }\n\n    const landmarks = multiFaceLandmarks[0];\n    const canvasWidth = canvasRef.current.width;\n    const canvasHeight = canvasRef.current.height;\n    const irisLandmarks = landmarks.slice(468, 473);\n    const points = irisLandmarks.map(p => [p.x * canvasWidth, p.y * canvasHeight]);\n\n    if (points.length < 2) {\n      liveDiameterRef.current = null;\n      setCurrentLiveDiameter(null);\n      return;\n    }\n\n    const n = points.length;\n    const meanX = points.reduce((sum, [x]) => sum + x, 0) / n;\n    const meanY = points.reduce((sum, [, y]) => sum + y, 0) / n;\n\n    let cxx = 0, cxy = 0, cyy = 0;\n    points.forEach(([x, y]) => {\n      const dx = x - meanX;\n      const dy = y - meanY;\n      cxx += dx * dx;\n      cxy += dx * dy;\n      cyy += dy * dy;\n    });\n    cxx /= n;\n    cyy /= n;\n    cxy /= n;\n\n    const trace = cxx + cyy;\n    const determinant = cxx * cyy - cxy * cxy;\n    const discriminant = Math.sqrt(Math.max(0, (trace * trace) / 4 - determinant));\n    const lambda1 = trace / 2 + discriminant;\n    const diameter = 2 * Math.sqrt(lambda1);\n\n    if (diameter < 2 || diameter > 40) {\n      liveDiameterRef.current = null;\n      setCurrentLiveDiameter(null);\n      return;\n    }\n\n    liveDiameterRef.current = diameter;\n    setCurrentLiveDiameter(diameter.toFixed(1));\n  }\n\n  async function samplePupilDiameterMedian(samples = 60, interval = 10) {\n    const readings = [];\n    for (let i = 0; i < samples; i++) {\n      await utilityDelay(interval);\n      if (liveDiameterRef.current !== null) readings.push(liveDiameterRef.current);\n    }\n    if (!readings.length) return null;\n\n    readings.sort((a, b) => a - b);\n    const trimCount = Math.floor(readings.length * 0.1);\n    const trimmed = readings.slice(trimCount, readings.length - trimCount);\n    return trimmed.length ? trimmed[Math.floor(trimmed.length / 2)] : readings[Math.floor(readings.length / 2)];\n  }\n\n  async function runSingleTestCycle(currentIndex) {\n    if (overlayState.isTransitioning) {\n      console.warn(`Cycle ${currentIndex + 1} skipped due to ongoing transition`);\n      return;\n    }\n\n    console.log(`[${Date.now()}] Starting Cycle ${currentIndex + 1}, overlayState=${overlayState.type}`);\n\n    // Reset diameter\n    liveDiameterRef.current = null;\n    setCurrentLiveDiameter(null);\n\n    // Baseline measurement\n    setOverlayState({ type: 'baseline', isTransitioning: false });\n    console.log(`[${Date.now()}] Baseline ON, overlayState=baseline`);\n    await utilityDelay(baselineDarkAdaptationDuration);\n    const measuredBaseline = await samplePupilDiameterMedian();\n    setOverlayState({ type: null, isTransitioning: false });\n\n    // Flash and constriction measurement\n    setOverlayState({ type: 'flash', isTransitioning: false });\n    console.log(`[${Date.now()}] Flash ON, overlayState=flash`);\n    await utilityDelay(lightFlashDurations[currentIndex] - 100);\n    const measuredConstricted = await samplePupilDiameterMedian(10, 10); // Sample last 100ms\n    await utilityDelay(100); // Ensure flash completes\n    setOverlayState({ type: null, isTransitioning: true });\n    console.log(`[${Date.now()}] Flash OFF, overlayState=null`);\n\n    // Debug logging\n    console.log(`Cycle ${currentIndex + 1}: Baseline=${measuredBaseline?.toFixed(1) || 'N/A'}, Constricted=${measuredConstricted?.toFixed(1) || 'N/A'}`);\n\n    // Record results\n    let delta, percent;\n    if (measuredBaseline && measuredConstricted && measuredBaseline >= measuredConstricted) {\n      delta = (measuredBaseline - measuredConstricted).toFixed(1);\n      percent = (((measuredBaseline - measuredConstricted) / measuredBaseline) * 100).toFixed(1);\n    } else {\n      console.warn(`Invalid measurement in cycle ${currentIndex + 1}: Baseline=${measuredBaseline}, Constricted=${measuredConstricted}`);\n      delta = '–';\n      percent = '–';\n      setMeasurementError('Some measurements were invalid, possibly due to lighting, positioning, or camera issues. Please retry in a near-dark room, facing the camera directly.');\n    }\n\n    setTestMetrics(prev => [\n      ...prev,\n      {\n        cycle: currentIndex + 1,\n        baseline: measuredBaseline?.toFixed(1) || '–',\n        constricted: measuredConstricted?.toFixed(1) || '–',\n        delta,\n        percent\n      }\n    ]);\n\n    // Next cycle or recall\n    if (currentIndex + 1 < lightFlashIntensities.length) {\n      setCycleIndex(currentIndex + 1);\n      setOverlayState({ type: 'baseline', isTransitioning: false });\n      console.log(`[${Date.now()}] Transition to Cycle ${currentIndex + 2}, overlayState=baseline`);\n    } else {\n      setOverlayState({ type: null, isTransitioning: false });\n      cleanupCameraAndFaceMesh(); // Turn off camera before recall\n      setStep('recall');\n    }\n  }\n\n  async function checkCalibration() {\n    console.log('Checking calibration');\n    let validDetections = 0;\n    for (let i = 0; i < 10; i++) {\n      await utilityDelay(100);\n      if (liveDiameterRef.current !== null) validDetections++;\n    }\n    console.log(`Calibration result: ${validDetections}/10 valid detections`);\n    return validDetections >= 8; // 80% valid\n  }\n\n  useEffect(() => {\n    if (step === 'calibration') {\n      console.log('Entered calibration step');\n      setOverlayState({ type: 'initial', isTransitioning: false });\n      const timer = setTimeout(async () => {\n        setOverlayState({ type: null, isTransitioning: false });\n        const isCalibrated = await checkCalibration();\n        if (isCalibrated) {\n          console.log('Calibration successful, proceeding to testing');\n          setStep('testing');\n        } else {\n          console.log('Calibration failed');\n          setMeasurementError('Unable to detect face reliably. Please ensure good lighting and face the camera directly.');\n          cleanupCameraAndFaceMesh(); // Cleanup if calibration fails\n          setStep('preparation');\n        }\n      }, initialDarkAdaptationDuration);\n      return () => clearTimeout(timer);\n    }\n    if (step === 'testing' && !overlayState.isTransitioning) {\n      console.log('Starting test cycle', cycleIndex + 1);\n      runSingleTestCycle(cycleIndex);\n    }\n  }, [step, cycleIndex]);\n\n  // Cleanup to prevent flash during cycle transitions\n  useEffect(() => {\n    return () => {\n      setOverlayState({ type: null, isTransitioning: false });\n      console.log(`[${Date.now()}] Cleanup: overlayState reset to null`);\n    };\n  }, [cycleIndex]);\n\n  const handleStartTest = async () => {\n    console.log('Begin Test clicked');\n    setTestMetrics([]);\n    setCycleIndex(0);\n    setMeasurementError(null);\n    setDetectionWarning(null);\n    setOverlayState({ type: null, isTransitioning: false });\n    setStep('initializing');\n\n    // Set a timeout to detect initialization failure\n    initializationTimeoutRef.current = setTimeout(() => {\n      if (step === 'initializing' && !isCameraReady) {\n        console.error('Camera initialization timed out');\n        setMeasurementError('Camera initialization took too long. Please ensure camera access and try again.');\n        cleanupCameraAndFaceMesh();\n        setStep('preparation');\n      }\n    }, 5000); // 5 seconds timeout\n\n    const initialized = await initializeCameraAndFaceMesh();\n    if (!initialized) {\n      console.log('Initialization failed, returning to preparation');\n      clearTimeout(initializationTimeoutRef.current);\n      initializationTimeoutRef.current = null;\n      setStep('preparation');\n    }\n  };\n\n  const handleRecallSubmit = () => {\n    setIsRecallCorrect(recallInput === memoryNumberRef.current.toString());\n    setStep('results');\n  };\n\n  const validDeltas = testMetrics.map(m => parseFloat(m.percent)).filter(v => !isNaN(v));\n  const avgDelta = validDeltas.length ? (validDeltas.reduce((a, b) => a + b, 0) / validDeltas.length).toFixed(1) : null;\n\n  // Memoized Overlay Component\n  const Overlay = memo(({ overlayState, cycleIndex, lightFlashIntensities, currentLiveDiameter, detectionWarning, baselineDotRadius }) => {\n    if (!overlayState.type) return null;\n    return (\n      <div className={overlayState.type === 'flash' ? 'full-flash-overlay' : 'full-black-overlay'}>\n        {overlayState.type !== 'flash' && (\n          <>\n            <div className=\"overlay-text\">\n              {overlayState.type === 'initial' && 'Preparing test...'}\n              {overlayState.type === 'baseline' &&\n                `Cycle ${cycleIndex + 1} of ${lightFlashIntensities.length}: Focus`}\n            </div>\n            <div className=\"ring-indicator\">\n              <div \n                className=\"pupil-dot\"\n                style={{ width: baselineDotRadius, height: baselineDotRadius }}\n              />\n            </div>\n            {currentLiveDiameter && (\n              <div className=\"live-feedback\">\n                {currentLiveDiameter}px\n              </div>\n            )}\n            {detectionWarning && (\n              <div className=\"error-message\">\n                {detectionWarning}\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"pupil-test-container\" ref={containerRef}>\n      <video ref={videoRef} className=\"hidden-video\" playsInline muted />\n      <Overlay\n        overlayState={overlayState}\n        cycleIndex={cycleIndex}\n        lightFlashIntensities={lightFlashIntensities}\n        currentLiveDiameter={currentLiveDiameter}\n        detectionWarning={detectionWarning}\n        baselineDotRadius={baselineDotRadius}\n      />\n\n      {step === 'intro' && (\n        <div className=\"intro-step\">\n          <h2>Pupillary Response Test</h2>\n          <div className=\"memory-number\">{memoryNumberRef.current}</div>\n          <p>Remember this number for later recall</p>\n          <button \n            className=\"primary-button\"\n            onClick={() => setStep('preparation')}\n            disabled={hasCameraPermission === null || !hasCameraPermission}\n          >\n            Continue\n          </button>\n          {hasCameraPermission === false && (\n            <div className=\"error-message\">\n              Camera permission is required to proceed. Please grant camera access in your browser settings.\n            </div>\n          )}\n        </div>\n      )}\n\n      {step === 'preparation' && (\n        <div className=\"preparation-step\">\n          <h3>Test Preparation</h3>\n          <ul className=\"instructions\">\n            <li>Ensure a near-dark room (turn off all room lights except the monitor).</li>\n            <li>Set your monitor brightness to the lowest comfortable level.</li>\n            <li>Position yourself 50-60cm from your camera and face it directly.</li>\n            <li>Keep your head still and avoid blinking during measurements.</li>\n            <li>Focus on the central dot during the black screen and maintain focus throughout the test.</li>\n          </ul>\n          {measurementError && (\n            <div className=\"error-message\">\n              {measurementError}\n            </div>\n          )}\n          <button className=\"primary-button start-button\" onClick={handleStartTest}>\n            Begin Test\n          </button>\n        </div>\n      )}\n\n      {step === 'initializing' && (\n        <div className=\"preparation-step\">\n          <h3>Initializing Camera...</h3>\n          <p>Please wait while the camera is set up.</p>\n          {measurementError && (\n            <div className=\"error-message\">\n              {measurementError}\n            </div>\n          )}\n        </div>\n      )}\n\n      {step === 'testing' && (\n        <div className=\"testing-step\">\n          {/* Minimal content; visuals handled by overlays */}\n        </div>\n      )}\n\n      {step === 'recall' && (\n        <div className=\"recall-step\">\n          <h3>Memory Recall</h3>\n          <p>Please enter the number you were shown at the beginning of the test.</p>\n          <div className=\"recall-task\">\n            <input\n              type=\"text\"\n              value={recallInput}\n              onChange={e => setRecallInput(e.target.value)}\n              placeholder=\"Enter the number\"\n            />\n            <button className=\"primary-button\" onClick={handleRecallSubmit}>\n              Submit\n            </button>\n          </div>\n        </div>\n      )}\n\n      {step === 'results' && (\n        <div className=\"results-step\">\n          <h3>Test Results</h3>\n          \n          {measurementError && (\n            <div className=\"error-message\">\n              {measurementError}\n            </div>\n          )}\n\n          <div className=\"metrics-grid\">\n            {testMetrics.map((m, i) => (\n              <div key={i} className=\"metric-card\">\n                <h4>Cycle {m.cycle}</h4>\n                <div className=\"metric-row\">\n                  <span>Baseline:</span>\n                  <span>{m.baseline}px</span>\n                </div>\n                <div className=\"metric-row\">\n                  <span>Constricted:</span>\n                  <span>{m.constricted}px</span>\n                </div>\n                <div className=\"metric-row highlight\">\n                  <span>Change:</span>\n                  <span>{m.delta}px ({m.percent}%)</span>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {avgDelta && (\n            <div className=\"summary-card\">\n              <h4>Average Pupil Constriction</h4>\n              <div className=\"result-value\">{avgDelta}%</div>\n              <div className=\"interpretation\">\n                <p><strong>Reference Range:</strong> A normal pupillary response typically shows an average constriction of 20–40%.</p>\n                {avgDelta > 20 ? (\n                  <>\n                    <p><strong>Normal Response:</strong> Your pupils constricted by an average of {avgDelta}%, which is within the typical range for healthy individuals.</p>\n                    <p>The Pupillary Light Response (PLR) test measures how your pupils react to light, which can be an early indicator of neurological health. A normal response suggests typical neurological function, but regular check-ups are recommended.</p>\n                  </>\n                ) : avgDelta > 10 ? (\n                  <>\n                    <p><strong>Mild Reduction:</strong> Your pupils constricted by an average of {avgDelta}%, which is below the typical range.</p>\n                    <p>This may not indicate a problem, but reduced PLR can sometimes be associated with neurological conditions, including early Alzheimer's disease. We recommend discussing these results with a healthcare professional for further evaluation.</p>\n                  </>\n                ) : (\n                  <>\n                    <p><strong>Significant Reduction:</strong> Your pupils constricted by an average of {avgDelta}%, which is significantly below the typical range.</p>\n                    <p>A reduced PLR may be an early sign of neurological issues, such as Alzheimer's disease, as the pupil's response to light can reflect brain function. Please consult a healthcare professional promptly to discuss these results and consider further testing.</p>\n                  </>\n                )}\n                {avgDelta < 1 && (\n                  <p><strong>Note:</strong> A very low constriction percentage may indicate measurement issues. Please ensure a near-dark room, direct camera facing, and focus on the central dot, then retry the test.</p>\n                )}\n                <p><em>Note: This test is for informational purposes only and is not a substitute for a medical diagnosis.</em></p>\n              </div>\n            </div>\n          )}\n\n          {testMetrics.length > 1 && validDeltas.length < testMetrics.length / 2 && (\n            <div className=\"error-message\">\n              Multiple cycles failed to measure valid pupil responses. Please retry in a near-dark room with stable positioning.\n            </div>\n          )}\n\n          <div className=\"recall-task\">\n            <h4>Memory Recall Result</h4>\n            {isRecallCorrect !== null && (\n              <div className={`feedback ${isRecallCorrect ? 'correct' : 'incorrect'}`}>\n                {isRecallCorrect ? 'Correct!' : `Incorrect (was ${memoryNumberRef.current})`}\n              </div>\n            )}\n          </div>\n\n          <button className=\"primary-button\" onClick={() => setCurrentTest('home')}>\n            Complete Test\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport LanguageAnalysis from './components/LanguageTest/LanguageAnalysis';\nimport HandReaction from './components/HandTest/HandReaction';\nimport EyeTracking from './components/EyeTest/EyeTracking';\nimport RealEyeTracking from './components/EyeTest/RealEyeTracking';\nimport PupilTest from './components/PupilTest/PupilTest';\n\nfunction App() {\n  const [currentTest, setCurrentTest] = useState('home');\n\n  // Clean up WebGazer when switching away from eye tests\n  useEffect(() => {\n    if (currentTest !== 'eye' && currentTest !== 'realEye') {\n      if (window.webgazer) {\n        console.log(\"[DEBUG] Clearing WebGazer instance (no .end() call)\");\n        // we skip calling .end() because it can throw synchronously\n        window.webgazer = null;\n        console.log(\"[DEBUG] window.webgazer cleared.\");\n      }\n    }\n  }, [currentTest]);\n\n  const handleSetCurrentTest = (testName) => {\n    setCurrentTest(testName);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>腦友記 Cognitia</h1>\n        <p>阿茲海默症早期檢測 AI 系統</p>\n        {currentTest !== 'home' && (\n          <button \n            onClick={() => handleSetCurrentTest('home')} \n            className=\"back-button\"\n          >\n            返回主頁\n          </button>\n        )}\n      </header>\n      <main>\n        {currentTest === 'home' && <Home setCurrentTest={handleSetCurrentTest} />}\n        {currentTest === 'language' && <LanguageAnalysis setCurrentTest={handleSetCurrentTest} />}\n        {currentTest === 'hand' && <HandReaction setCurrentTest={handleSetCurrentTest} />}\n        {currentTest === 'eye' && <EyeTracking setCurrentTest={handleSetCurrentTest} />}\n        {currentTest === 'realEye' && <RealEyeTracking setCurrentTest={handleSetCurrentTest} />}\n        {currentTest === 'pupil' && <PupilTest setCurrentTest={handleSetCurrentTest} />}\n      </main>\n      <footer className=\"App-footer\">\n        <p>© 2025 腦友記 Cognitia | 使用實際 AI 技術進行早期認知健康檢測</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}